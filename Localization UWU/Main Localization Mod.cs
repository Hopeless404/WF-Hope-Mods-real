using Deadpan.Enums.Engine.Components.Modding;
using FMODUnity;
using HarmonyLib;
using System;
using System.IO;
using TMPro;
using UnityEngine;
using UnityEngine.Localization.Tables;
using UnityEngine.Localization;
using UnityEngine.Localization.Settings;
using System.Linq;
using System.Text;
using System.Runtime.Remoting.Messaging;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using System.Reflection;

namespace WildfrostHopeMod.Localization.UWU
{
    public class LocalizationUWU : WildfrostMod
    {
        public static LocalizationUWU Mod;
        public LocalizationUWU(string modDirectory) : base(modDirectory)
        {
            Mod = this;
        }
        public override string GUID => "hope.wildfrost.uwu";
        public override string[] Depends => new string[] { };
        public override string Title => "UwU OwO";
        public override string Description => "Why woud yu use this uwu";
        public static readonly LocaleIdentifier locale = new("uwu");
        public static readonly string[] collections =
            [
            "Battle Log",
            "Card Text",
            "Cards",
            "Challenges",
            "Credits",
            "Effects",
            "Journal",
            "Modifiers",
            "Speech",
            "Stats",
            "Tooltips",
            "UI Text",
            "Upgrades"
            ];

        [HarmonyPatch(typeof(LocalizedString), nameof(LocalizedString.GetLocalizedString), typeof(object[]))]
        internal class PatchFormatter
        {
            static void Postfix(ref string __result, object[] arguments) 
                => __result = __result.Format(arguments);
        }
        //[HarmonyPatch(typeof(LocalizationHelper), nameof(LocalizationHelper.SetString))]
        public class Patch
        {
            static string category = "";
            public static void Prefix(StringTable table, string key, ref string value)
            {
                //value = "test <sprite=snow>";
                return;
                if (table.TableCollectionName != category)
                {
                    category = table.TableCollectionName;
                    Debug.LogError($"[{category}]");
                }
                value = table.GetString(key).GetLocalizedString();
                if (value.Any(c => c == '\r' || c == '\n'))
                {
                    var builder = new StringBuilder();
                    foreach (var cur in value)
                    {
                        switch (cur)
                        {
                            case '\r':
                                builder.Append(@"\r");
                                break;
                            case '\n':
                                builder.Append(@"\n");
                                break;
                            default:
                                builder.Append(cur);
                                break;
                        }
                    }
                    value = builder.ToString();
                }
                Debug.LogWarning($"[{table.TableCollectionName}] {key} :: {value}");
            }
            public static void Postfix(StringTable table, string key, string value)
            {
                
                if (table.TableCollectionName == category)
                    return;
                Debug.LogError("++++++++++++++++");
                category = table.TableCollectionName;
                Debug.LogError($"[{category}]");

                Debug.Log(key);
                var entry = table.GetEntry(key);
                var enTable = LocalizationHelper.GetCollection(table.TableCollectionName, new LocaleIdentifier(SystemLanguage.English));
                Debug.Log(enTable);
                var entry2 = enTable.GetEntry(key);
                if (entry2 != null)
                {
                    Debug.LogWarning("ENTRY 1");
                    foreach (var field in entry.GetType().GetProperties((BindingFlags)0x1FFFFFD))
                    {
                        try { Debug.Log($"{field.Name}: {field.GetValue(entry) ?? "null"}"); }
                        catch { Debug.Log($"{field.Name} failed"); }
                    }
                    Debug.LogWarning("ENTRY 2");
                    foreach (var field in entry2.GetType().GetProperties((BindingFlags)0x1FFFFFD))
                    {
                        try { Debug.Log($"{field.Name}: {field.GetValue(entry2) ?? "null"}"); }
                        catch { Debug.Log($"{field.Name} failed"); }
                    }
                    Debug.LogWarning((entry?.IsSmart, entry2?.IsSmart));
                }

                Debug.LogError("---------------");
            }
        }
        static void ChangeLogo(Scene scene)
        {
            if (scene.name == "MainMenu")
            {
                if (LocalizationSettings.AvailableLocales.Locales.Any(l => l.Identifier == locale))
                    LocalizationSettings.SelectedLocale = LocalizationSettings.AvailableLocales.Locales.First(l => l.Identifier == locale);
                GameObject go = GameObject.Find("Canvas/Safe Area/Menu/Title");
                if (!go) return;
                go.GetComponent<Image>().sprite = Mod.IconSprite;
                go.transform.localScale = 1.4f * Vector2.one;
            }
        }

        public override void Load()
        {
            base.Load();
            Events.OnSceneChanged += ChangeLogo;
            Events.OnGameStart += PatchSLS.Postfix;
            if (SceneManager.IsLoaded("MainMenu"))
                ChangeLogo(SceneManager.GetActive());

            if (LocalizationSettings.AvailableLocales.Locales.Any(l => l.Identifier == locale))
            {
                LocalizationSettings.SelectedLocale = LocalizationSettings.AvailableLocales.Locales.First(l => l.Identifier == locale);
                return;
            }

            LocalizationHelper.TryAddLocale(locale);
            StringTable BattleLog = LocalizationHelper.GetCollection("Battle Log", locale);
            StringTable CardText = LocalizationHelper.GetCollection("Card Text", locale);
            StringTable Cards = LocalizationHelper.GetCollection("Cards", locale);
            StringTable Challenges = LocalizationHelper.GetCollection("Challenges", locale);
            StringTable Credits = LocalizationHelper.GetCollection("Credits", locale);
            StringTable Effects = LocalizationHelper.GetCollection("Effects", locale);
            StringTable Journal = LocalizationHelper.GetCollection("Journal", locale);
            StringTable Modifiers = LocalizationHelper.GetCollection("Modifiers", locale);
            StringTable Speech = LocalizationHelper.GetCollection("Speech", locale);
            StringTable Stats = LocalizationHelper.GetCollection("Stats", locale);
            StringTable Tooltips = LocalizationHelper.GetCollection("Tooltips", locale);
            StringTable UIText = LocalizationHelper.GetCollection("UI Text", locale);
            StringTable Upgrades = LocalizationHelper.GetCollection("Upgrades", locale);

            BattleLog.SetString("Log Turn", "TUWN {0}");
            BattleLog.SetString("Log Hit", "{0} hits {1}, deawing [{2} owie]");
            BattleLog.SetString("Log Damage", "{0} takes [{1} owie]");
            BattleLog.SetString("Log Special Damage", "{0} takes [{1} owie] fwom {2}");
            BattleLog.SetString("Log Destroy", "{0} dies!");
            BattleLog.SetString("Log Block", "{0} bwocks [{1} owie]");
            BattleLog.SetString("Log Status", "[{1}]<sprite name={2}> appwied to {0}");
            BattleLog.SetString("Log Status From", "{0} appwies [{2}]<sprite name={3}> to {1}");
            BattleLog.SetString("Log Heal", "{0} heaws {1}");
            BattleLog.SetString("Log Restored", "{0} <sprite name=health> westowed by [{1}]");
            BattleLog.SetString("Log Boost", "{0} boosts de effects of {1} by [{2}]");
            BattleLog.SetString("Log Increase Attack", "{0} incweases de <sprite name=attack> of {1} by [{2}]");
            BattleLog.SetString("Log Reduce Attack", "{0} weduces de <sprite name=attack> of {1} by [{2}]");
            BattleLog.SetString("Log Increase Health", "{0} incweases de <sprite name=health> of {1} by [{2}]");
            BattleLog.SetString("Log Reduce Health", "{0} weduces de <sprite name=health> of {1} by [{2}]");
            BattleLog.SetString("Log Consumed", "{0} is consumed!");
            BattleLog.SetString("Log Increase Attack Self", "{0} gains [+{1}]<sprite name=attack>");
            BattleLog.SetString("Log Reduce Attack Self", "{0} woses [{1}]<sprite name=attack>");
            BattleLog.SetString("Log Increase Health Self", "{0} gains [+{1}]<sprite name=health>");
            BattleLog.SetString("Log Reduce Health Self", "{0} woses [{1}]<sprite name=health>");
            BattleLog.SetString("Log Increase Counter", "{0} incweases de <sprite name=counter> of {1} by [{2}]");
            BattleLog.SetString("Log Increase Counter Self", "{0} <sprite name=counter> incwease by [{1}]");
            BattleLog.SetString("Log Reduce Counter", "{0} weduces de <sprite name=counter> of {1} by [{2}]");
            BattleLog.SetString("Log Reduce Counter Self", "{0} <sprite name=counter> weduced by [{1}]");
            BattleLog.SetString("Log Battle Win", "De battwe is won!");
            BattleLog.SetString("Log Battle Lose", "De battwe is wost :(");
            BattleLog.SetString("Log Flee", "{0} fwees!");
            BattleLog.SetString("Log Eaten", "{0} is eaten!");
            BattleLog.SetString("Log Sacrificed", "{0} is sacwificed!");
            BattleLog.SetString("Log Enter Battle", "{0} entews de battwe!");
            BattleLog.SetString("Log Recalled", "{0} is wecawwed");
            BattleLog.SetString("Log Summoned", "{0} is summoned!");
            CardText.SetString("Deal additional damage equal to Tar Blades in hand", "Deaw additionaw owie equaw to <Tar Blades> in hand");
            CardText.SetString("Deal additional damage equal to X", "Deaw additionaw owie equaw to {0}");
            CardText.SetString("Deal additional damage equal to X on the board", "Deaw additionaw owie equaw to {0} on de boawd");
            CardText.SetString("Deal damage equal to X", "Deaw owie equaw to {0}");
            CardText.SetString("Destroy self", "Destwoy sewf");
            CardText.SetString("Double the target's X", "Doubwe de tawget's {0}");
            CardText.SetString("Restore X", "Westowe {0}");
            CardText.SetString("Increase X by", "Incwease {0} by <{a}>");
            CardText.SetString("While damaged, X is increased by", "Whiwe owied, {0} is incweased by <{a}>");
            CardText.SetString("Add their X to all allies", "Add deiw {0} to aww awwies");
            CardText.SetString("Add X", "Add {0}");
            CardText.SetString("Add X to your hand", "Add {0} to yuw hand");
            CardText.SetString("Add X to a random ally", "Add {0} to a wandom awwy");
            CardText.SetString("Gain X", "Gain {0}");
            CardText.SetString("Apply X to a random ally or enemy", "Appwy {0} to a wandom awwy ow meanie");
            CardText.SetString("Apply X to a random enemy", "Appwy {0} to a wandom meanie");
            CardText.SetString("Apply X to front enemy", "Appwy {0} to fwont meanie");
            CardText.SetString("Apply X to a random ally", "Appwy {0} to a wandom awwy");
            CardText.SetString("Apply X to all enemies", "Appwy {0} to aww meanies");
            CardText.SetString("Apply X to enemies in the row", "Appwy {0} to meanies in de wow");
            CardText.SetString("Deal damage to all X'd enemies", "Deaw <{a}> owie to aww {e}'d meanies");
            CardText.SetString("Deal damage to self and allies in the row", "Deaw <{a}> owie to sewf and awwies in de wow");
            CardText.SetString("Deal damage to all undamaged enemies", "Deaw <{a}> owie to aww unowied meanies");
            CardText.SetString("Lose X", "Wose {0}");
            CardText.SetString("Reduce by X when played", "Weduce by {0} when pwayed");
            CardText.SetString("Kill a random ally", "Kiww a wandom awwy");
            CardText.SetString("Take X from all allies", "Take {e} fwom aww awwies");
            CardText.SetString("Also hits ally behind", "Awso hits awwy behind");
            CardText.SetString("Deal additional damage to damaged targets", "Deaw <{a}> additionaw owie to owied tawgets");
            CardText.SetString("Deal additional damage to X'd targets", "Deaw <{a}> additionaw owie to {e}'d tawgets");
            CardText.SetString("Restore X equal to damage dealt to front ally", "Westowe {0} to fwont awwy equaw to owie deawt ");
            CardText.SetString("Apply X equal to damage dealt", "Appwy {0} equaw to owie deawt");
            CardText.SetString("Gain X on kill", "Gain {0} on kiww");
            CardText.SetString("On kill, apply X to all allies", "On kiww, appwy {0} to aww awwies");
            CardText.SetString("On kill, apply X to a random ally", "On kiww, appwy {0} to a wandom awwy");
            CardText.SetString("On kill, apply X to a random enemy", "On kiww, appwy {0} to a wandom meanie");
            CardText.SetString("Restore X on kill", "Westowe {0} on kiww");
            CardText.SetString("On kill, restore X to self and allies in the row", "On kiww, westowe {0} to sewf and awwies in de wow");
            CardText.SetString("Apply X to ally behind", "Appwy {0} to awwy behind");
            CardText.SetString("Apply X to all allies", "Appwy {0} to aww awwies");
            CardText.SetString("Apply X to ally ahead", "Appwy {0} to awwy ahead");
            CardText.SetString("Eat a random ally, absorbing their attack, health and effects", "Eat a wandom awwy, absowbing deiw <keyword=attack>, <keyword=health> and effects");
            CardText.SetString("Escape from the battle", "Escape fwom de battwe");
            CardText.SetString("Restore X to all allies", "Westowe {0} to aww awwies");
            CardText.SetString("Eat allies in the row, absorbing their attack and health", "Eat awwies in de wow, absowbing deiw <keyword=attack> and <keyword=health>");
            CardText.SetString("Take X from a random ally in order to attack", "Take {e} fwom a wandom awwy in owda to attack");
            CardText.SetString("Count down X by", "Count down {0} by <{a}>");
            CardText.SetString("Reduce X by", "Weduce {0} by <{a}>");
            CardText.SetString("Kill an ally", "Kiww an awwy");
            CardText.SetString("Kill an enemy", "Kiww an meanie");
            CardText.SetString("Summon X", "Summon {0}");
            CardText.SetString("Summon X on the enemy side", "Summon {0} on de meanie side");
            CardText.SetString("Trigger against the target when an ally attacks", "Twigga against de tawget when an awwy attacks");
            CardText.SetString("Trigger against anything that is hit with X", "Twigga against anything dat is hit wif {e}");
            CardText.SetString("Trigger when an ally attacks", "Twigga when an awwy attacks");
            CardText.SetString("Trigger when an ally in the row attacks", "Twigga when an awwy in de wow attacks");
            CardText.SetString("Trigger when an ally is hit", "Twigga when an awwy is hit");
            CardText.SetString("When an ally is healed, apply equal X", "When an awwy is heawed, appwy equaw {0}");
            CardText.SetString("When an ally is hit, apply X to the attacker", "When an awwy is hit, appwy {0} to de attacka");
            CardText.SetString("When an ally is hit, restore their X by", "When an awwy is hit, westowe deiw {0} by <{a}>");
            CardText.SetString("Gain X when an ally is killed", "Gain {0} when an awwy is kiwwed");
            CardText.SetString("When an ally is sacrificed, gain their X", "When an awwy is <keyword=sacrificed>, gain deiw {0}");
            CardText.SetString("Trigger when an ally is sacrificed", "Twigga when an awwy is <keyword=sacrificed>");
            CardText.SetString("Whenever anything takes damage from shroom, gain X", "Wheneva anything takes owie fwom <keyword=shroom>, gain {0}");
            CardText.SetString("When built, add X to your hand", "When buiwt, add {0} to yuw hand");
            CardText.SetString("When deployed, gain X", "When depwoyed, gain {0}");
            CardText.SetString("When deployed, apply X to all allies", "When depwoyed, appwy {0} to aww awwies");
            CardText.SetString("When deployed, copy the effects of a random enemy", "When depwoyed, copy de effects of a wandom meanie");
            CardText.SetString("When deployed, summon X", "When depwoyed, summon {0}");
            CardText.SetString("When destroyed, deal damage to allies in the row", "When destwoyed, deaw <{a}> owie to awwies in de wow");
            CardText.SetString("When destroyed, add X to a random ally", "When destwoyed, add {0} to a wandom awwy");
            CardText.SetString("When destroyed, apply X to the attacker", "When destwoyed, appwy {0} to de attacka");
            CardText.SetString("When destroyed, apply X to all allies", "When destwoyed, appwy {0} to aww awwies");
            CardText.SetString("When destroyed, summon X", "When destwoyed, summon {0}");
            CardText.SetString("When destroyed, trigger all allies", "When destwoyed, twigga aww awwies");
            CardText.SetString("When an enemy attacks, apply X to them", "When an meanie attacks, appwy {0} to dem");
            CardText.SetString("When a shroom'd enemy dies, apply their X to a random enemy", "When a <keyword=shroom>'d meanie dies, appwy deiw {0} to a wandom meanie");
            CardText.SetString("When an enemy is killed, gain X", "When an meanie is kiwwed, gain {0}");
            CardText.SetString("When an enemy is killed, apply X to the attacker", "When an meanie is kiwwed, appwy {0} to de attacka");
            CardText.SetString("When healed, gain X", "When heawed, gain {0}");
            CardText.SetString("When health lost, gain equal X", "When <keyword=health> wost, gain equaw {0}");
            CardText.SetString("When hit, gain X", "When hit, gain {0}");
            CardText.SetString("When hit, add lost X to a random ally", "When hit, add wost {0} to a wandom awwy");
            CardText.SetString("When hit, apply X to a random ally", "When hit, appwy {0} to a wandom awwy");
            CardText.SetString("When hit, apply X to the attacker", "When hit, appwy {0} to de attacka");
            CardText.SetString("When hit, apply X to all enemies", "When hit, appwy {0} to aww meanies");
            CardText.SetString("Drop X when hit", "Dwop {0} when hit");
            CardText.SetString("When hit, apply X to a random enemy", "When hit, appwy {0} to a wandom meanie");
            CardText.SetString("When hit, apply X to ally behind", "When hit, appwy {0} to awwy behind");
            CardText.SetString("When hit, apply X to all allies", "When hit, appwy {0} to aww awwies");
            CardText.SetString("When hit, apply X to everyone in the battle", "When hit, appwy {0} to evewyone in de battwe");
            CardText.SetString("When hit, apply X to allies in the row", "When hit, appwy {0} to awwies in de wow");
            CardText.SetString("When hit, deal damage to all enemies", "When hit, deaw <{a}> owie to aww meanies");
            CardText.SetString("When hit, deal damage to enemies in the row", "When hit, deaw <{a}> owie to meanies in de wow");
            CardText.SetString("X when hit", "{0} when hit");
            CardText.SetString("When hit, deal equal damage to the attacker", "When hit, deaw equaw owie to de attacka");
            CardText.SetString("Increase by X when hit", "Incwease by {0} when hit");
            CardText.SetString("When hit, add X to a random ally", "When hit, add {0} to a wandom awwy");
            CardText.SetString("When hit, reduce the attacker's X by", "When hit, weduce de attacka's {0} by <{a}>");
            CardText.SetString("When hit, reduce X by", "When hit, weduce {0} by <{a}>");
            CardText.SetString("When hit, count down X by", "When hit, count down {0} by <{a}>");
            CardText.SetString("Trigger when hit", "Twigga when hit");
            CardText.SetString("When sacrificed, summon X", "When <keyword=sacrificed>, summon {0}");
            CardText.SetString("Whenever anything is shroom'd, double the amount and lose X", "Wheneva anything is <keyword=shroom>'d, doubwe de amount and wose {0}");
            CardText.SetString("Whenever anything is snow'd, gain X", "Wheneva anything is <keyword=snow>'d, gain {0}");
            CardText.SetString("Whenever anything is snow'd, gain equal X", "Wheneva anything is <keyword=snow>'d, gain equaw {0}");
            CardText.SetString("When snow'd, apply X to all enemies", "When <keyword=snow>'d, appwy {0} to aww meanies");
            CardText.SetString("Trigger when X reaches", "Twigga when {e} weaches <{a}>");
            CardText.SetString("While active, add X to all enemies", "Whiwe active, add {0} to aww meanies");
            CardText.SetString("While active, allies gain X", "Whiwe active, awwies gain {0}");
            CardText.SetString("While active, add X to all allies", "Whiwe active, add {0} to aww awwies");
            CardText.SetString("While active, add X to crown'd allies", "Whiwe active, add {0} to <sprite name=crown>'d awwies");
            CardText.SetString("While active, all allies retain X", "Whiwe active, aww awwies wetain {0}");
            CardText.SetString("While active, add current X to all Summoned allies", "Whiwe active, add cuwwent {0} to aww <Summoned> awwies");
            CardText.SetString("While active, add X to everyone in the battle", "Whiwe active, add {0} to evewyone in de battwe");
            CardText.SetString("While active, add X to allies in the row", "Whiwe active, add {0} to awwies in de wow");
            CardText.SetString("While active, add X to Items in your hand", "Whiwe active, add {0} to <Items> in yuw hand");
            CardText.SetString("While active, boost the effects of the front ally by", "Whiwe active, boost de effects of de fwont awwy by <{a}>");
            CardText.SetString("Apply X", "Appwy {0}");
            CardText.SetString("While active, add attack to all allies and reduce attack to all enemies", "Whiwe active, add <+{s0}><keyword=attack> to aww awwies and <-{s1}><keyword=attack> to aww meanies");
            CardText.SetString("Target must be X'd", "Tawget must be {e}'d");
            CardText.SetString("Destroy a card in your hand", "Destwoy a cawd in yuw hand");
            CardText.SetString("Summon a copy of an enemy on your side with health", "Summon a copy of an meanie on yuw side wif <{a}><keyword=health>");
            CardText.SetString("Summon a copy of an ally", "Summon a copy of an awwy");
            CardText.SetString("Make a copy of an item in your hand", "Make a copy of an <Item> in yuw hand");
            CardText.SetString("Gain X when an ally is hit", "Gain {0} when an awwy is hit");
            CardText.SetString("X on kill", "{0} on kiww");
            CardText.SetString("When destroyed, deal damage to enemies in row", "When destwoyed, deaw <{a}> owie to meanies in de wow");
            CardText.SetString("Add a X to a card in your hand", "Add {0} to a cawd in yuw hand");
            CardText.SetString("On kill, add X to self and allies", "On kiww, add {0} to sewf and aww awwies");
            CardText.SetString("When an ally is killed, gain their X", "When an awwy is kiwwed, gain deiw {0}");
            CardText.SetString("Trigger when an ally is killed", "Twigga when an awwy is kiwwed");
            CardText.SetString("When an enemy is deployed, copy their effects", "When an meanie is depwoyed, copy deiw effects");
            CardText.SetString("While active, add current X to all allies", "Whiwe active, add cuwwent {0} to aww awwies");
            CardText.SetString("While active, boost the effects of allies and enemies by", "Whiwe active, boost de effects of aww awwies and meanies by <{a}>");
            CardText.SetString("When consumed, apply X to all enemies", "When consumed, appwy {0} to aww meanies");
            CardText.SetString("When drawn, trigger against a random ally or enemy", "When dwawn, twigga against a wandom awwy ow meanie");
            CardText.SetString("When drawn, trigger against all crown allies", "When dwawn, twigga against aww <sprite name=crown> awwies");
            CardText.SetString("When drawn, trigger against a random ally", "When dwawn, twigga against a wandom awwy");
            CardText.SetString("When drawn, apply X to all allies", "When dwawn, appwy {0} to aww awwies");
            CardText.SetString("While in hand, reduce X of all allies by", "Whiwe in hand, weduce {0} of aww awwies by <{a}>");
            CardText.SetString("Reduce X of an ally by", "Weduce {0} of an awwy by <{a}>");
            CardText.SetString("When an ally is hit, apply X to them", "When an awwy is hit, appwy {0} to dem");
            CardText.SetString("Trigger when an enemy is killed", "Twigga when an meanie is kiwwed");
            CardText.SetString("When hit, add X to your hand", "When hit, add {0} to yuw hand");
            CardText.SetString("Add its X to a random ally", "Add its {0} to a wandom awwy");
            CardText.SetString("Add X to the target", "Add {0} to de tawget");
            CardText.SetString("Reduce the target's effects by", "Weduce de tawget's effects by <{a}>");
            CardText.SetString("Boost a random ally's effects by", "Boost a wandom awwy's effects by <{a}>");
            CardText.SetString("Destroy all cards in your hand", "Destwoy aww cawds in yuw hand");
            CardText.SetString("Gain X for each card destroyed", "Gain {0} fow each cawd destwoyed");
            CardText.SetString("When a card is destroyed, gain X", "When a cawd is destwoyed, gain {0}");
            CardText.SetString("When a card is destroyed, count down X by", "When a cawd is destwoyed, count down {0} by <{a}>");
            CardText.SetString("When deployed, add X to your hand", "When depwoyed, add {0} to yuw hand");
            CardText.SetString("Destroy the rightmost card in your hand", "Destwoy de wightmost cawd in yuw hand");
            CardText.SetString("Deal damage to an X'd target equal to their X", "Deaw owie to an {0}'d tawget equaw to deiw {0}");
            CardText.SetString("Destroy a random card in your hand", "Destwoy a wandom cawd in yuw hand");
            CardText.SetString("When destroyed, deal damage to all enemies", "When destwoyed, deaw <{a}> owie to aww meanies");
            CardText.SetString("When destroyed, deal damage to all enemies equal to X", "When destwoyed, owie aww meanies equaw to {0}");
            CardText.SetString("Trigger against an ally when they are hit", "Twigga against an awwy when dey awe hit");
            CardText.SetString("When a card is destroyed, apply X to a random ally", "When a cawd is destwoyed, appwy {0} to a wandom awwy");
            CardText.SetString("When juice'd, gain X", "When <keyword=juice>'d, gain {0}");
            CardText.SetString("Trigger multiple times equal to X", "Twigga muwtipwe times equaw to {0}");
            CardText.SetString("Hit all enemies", "Hits aww meanies");
            CardText.SetString("Boost a random enemy's effects by", "Boost a wandom meanie's effects by <{a}>");
            CardText.SetString("Hit all X'd enemies", "Hits aww {0}'d meanies");
            CardText.SetString("Double X", "Doubwe cuwwent {0}");
            CardText.SetString("On kill, apply X to ally behind", "On kiww, appwy {0} to awwy behind");
            CardText.SetString("Count down ally ahead's X by", "Count down awwy ahead's {0} by <{a}>");
            CardText.SetString("Trigger when Redraw Bell is hit", "Twigga when Wedwaw Beww is hit");
            CardText.SetString("Trigger when X is destroyed", "Twigga when {0} is destwoyed");
            CardText.SetString("Hit all undamaged enemies", "Hits aww unowied meanies");
            CardText.SetString("Use a random Item in your hand on a random enemy", "Use a wandom <Item> in hand on a wandom meanie");
            CardText.SetString("Whenever X is applied, double the amount", "Wheneva {0} is appwied, doubwe de amount");
            CardText.SetString("Count down all allies' X by", "Count down aww awwies' {0} by <{a}>");
            CardText.SetString("Destroy a random X in your hand", "Destwoy a wandom {0} in yuw hand");
            CardText.SetString("Trigger a random ally", "Twigga a wandom awwy");
            CardText.SetString("Add X to an Item in your hand", "Add {0} to an <Item> in yuw hand");
            CardText.SetString("Destroy all Items in your hand", "Destwoy aww <Items> in yuw hand");
            CardText.SetString("Add X to an enemy", "Add {0} to an meanie");
            CardText.SetString("When health lost, summon a X with health equal to the amount lost", "When <keyword=health> wost, Summon a {0} wif <keyword=health> equaw to de amount wost");
            CardText.SetString("When an ally is killed, lose half health and gain {0}", "When an awwy is kiwwed, wose hawf <keyword=health> and gain {0}");
            CardText.SetString("Split when health lost", "<keyword=split> when <keyword=health> wost");
            CardText.SetString("Hit enemy with lowest health", "Hits meanie wif wowest <keyword=health>");
            CardText.SetString("Boost the target's effects by", "Boost de tawget's effects by <{a}>");
            CardText.SetString("When hit with Junk, gain X", "When hit wif <card=Junk>, gain {0}");
            CardText.SetString("While active, add X to all Junk in your hand", "Whiwe active, add {0} to aww <card=Junk> in yuw hand");
            CardText.SetString("When health lost, add equal X to self and allies", "When <keyword=health> wost, add equaw {0} to sewf and awwies");
            CardText.SetString("When consumed, add X to all allies", "When consumed, add {0} to aww awwies");
            CardText.SetString("When snow'd, gain equal X", "When <keyword=snow>'d, gain equaw {0}");
            CardText.SetString("When shell'd, gain X instead", "When <keyword=shell>'d, gain {0} instead");
            CardText.SetString("Before an enemy attacks, apply X to them", "Befowe an meanie attacks, appwy {0} to dem");
            CardText.SetString("While active, add equal X to all Junk in your hand", "Whiwe active, add equaw {0} to aww <card=Junk> in yuw hand");
            CardText.SetString("Split when X health lost", "<keyword=split> when <{a}><keyword=health> wost");
            CardText.SetString("Deal damage to self", "Deaw <{a}> owie to sewf");
            CardText.SetString("Add Health and Attack to all Summoned allies", "Add <+{a}><keyword=attack> and <+{a}><keyword=health> to aww <Summoned> awwies");
            CardText.SetString("While active, add X to crown'd allies in the row", "Whiwe active, add {0} to <sprite name=crown>'d awwies in de wow");
            CardText.SetString("Add X to an ally", "Add {0} to an awwy");
            CardText.SetString("Add X to a random enemy", "Add {0} to a wandom meanie");
            CardText.SetString("Eat and Absorb a random ally", "Eat and <keyword=absorb> a wandom awwy");
            CardText.SetString("Before attacking, eat allies in the row, absorbing their attack and health", "Befowe attacking, eat awwies in de wow, absowbing deiw <keyword=attack> and <keyword=health>");
            CardText.SetString("Add Health and Attack to all allies", "Add <+{a}><keyword=attack> and <+{a}><keyword=health> to aww awwies");
            CardText.SetString("Retains X", "Wetains {0}");
            CardText.SetString("When destroyed, add X to all allies", "When destwoyed, add {0} to aww awwies");
            CardText.SetString("Take X", "Take {0}");
            CardText.SetString("Apply X to allies in the row", "Appwy {0} to awwies in de wow");
            CardText.SetString("Restore X and Cleanse all allies", "Westowe {0} and <keyword=cleanse> aww awwies");
            CardText.SetString("When an ally is healed, apply double X", "When an awwy is heawed, appwy doubwe {0}");
            CardText.SetString("When deployed, copy the effects of a random enemy in the row", "When depwoyed, copy de effects of a wandom meanie in de wow");
            CardText.SetString("When destroyed, deal damage to all allies", "When destwoyed, deaw <{a}> owie to aww awwies");
            CardText.SetString("While active, add X to non-crown'd allies", "Whiwe active, add {0} to awwies wifout <sprite name=crown>");
            CardText.SetString("Before triggering, gain X equal to scrap", "Befowe twiggewing, gain {0} equaw to <keyword=scrap>");
            CardText.SetString("When destroyed, apply X to the attacker and double their attack", "When destwoyed, appwy {0} to de attacka and doubwe deiw <keyword=attack>");
            CardText.SetString("While active, Recycle effects require less Junk", "Whiwe active, aww <Recycle> effects wequiwe <{a}> wess <Junk>");
            CardText.SetString("Gain X when self or an ally is hit", "Gain {0} when hit, ow an awwy is hit");
            CardText.SetString("Increase X of all allies by", "Incwease {0} of aww awwies by <{a}>");
            CardText.SetString("Increase X of a random ally by", "Incwease {0} of a wandom awwy by <{a}>");
            CardText.SetString("Add X to all allies", "Add {0} to aww awwies");
            CardText.SetString("Deal additional damage equal to the highest enemy X", "Deaw additionaw owie equaw to de highest meanie {0}");
            CardText.SetString("When deployed, apply X to all enemies", "When depwoyed, appwy {0} to aww meanies");
            CardText.SetString("Summon a X copy of a random enemy", "Summon a {0} copy of a wandom meanie");
            CardText.SetString("When an ally is sacrificed, summon a copy of them with X health and X attack", "When an awwy is <keyword=sacrificed>, summon a copy of dem wif <{a}><keyword=health> and <{a}><keyword=attack>");
            CardText.SetString("When an enemy is deployed, gain their X", "When an meanie is depwoyed, gain deiw {0}");
            CardText.SetString("When deployed, summon a copy of a random enemy with X", "When depwoyed, summon a copy of a wandom meanie wif {0}");
            CardText.SetString("Killing an enemy counts as sacrificing an ally", "Kiwwing an meanie awso counts as <Sacrificing> an awwy");
            CardText.SetString("Before attacking, kill all summoned allies and gain X for each", "Befowe attacking, kiww aww <Summoned> awwies and gain {0} fow each");
            CardText.SetString("When deployed, X and destroy all Junk in hand", "When depwoyed, {0} and destwoy aww <card=Junk> in hand");
            CardText.SetString("When hit, add X to self or ally with the lowest attack", "When hit, add {0} to sewf ow awwy wif de wowest <keyword=attack>");
            CardText.SetString("When hit, add X to self or ally with the highest attack", "When hit, add {0} to sewf ow awwy wif de highest <keyword=attack>");
            CardText.SetString("When hit, add X to self or ally with the lowest health", "When hit, add {0} to sewf ow awwy wif de wowest <keyword=health>");
            CardText.SetString("When hit, add X to self or ally with the highest health", "When hit, add {0} to sewf ow awwy wif de highest <keyword=health>");
            CardText.SetString("When hit, boost the effects of everyone else in the battle by", "When hit, boost de effects of evewyone ewse in de battwe by <{a}>");
            CardText.SetString("When hit, boost the effects of a random ally or enemy by", "When hit, boost de effects of a wandom awwy ow meanie by <{a}>");
            CardText.SetString("While active, add X to all Clunker allies", "Whiwe active, add {0} to aww <Clunker> awwies");
            CardText.SetString("Sacrifice self and resummon", "<Sacrifice> sewf and wesummon");
            CardText.SetString("When sacrificed, add X to all allies and resummon", "When <keyword=sacrificed>, add {0} to aww awwies and wesummon");
            CardText.SetString("Destroy all Junk in hand", "Destwoy aww <card=Junk> in hand");
            CardText.SetString("When deployed, add X to all Clunker allies", "When depwoyed, add {0} to aww <Clunker> awwies");
            CardText.SetString("Before attacking, X and destroy all Junk in hand", "Befowe attacking, {0} and destwoy aww <card=Junk> in hand");
            CardText.SetString("X and destroy all Junk in hand", "{0} and destwoy aww <card=Junk> in hand");
            CardText.SetString("Destroy all Junk in hand and X for each", "Destwoy aww <card=Junk> in hand and {0} fow each");
            CardText.SetString("When an enemy is deployed, apply X to them", "When an meanie is depwoyed, appwy {0} to dem");
            CardText.SetString("When destroyed, apply X to a random enemy", "When destwoyed, appwy {0} to a wandom meanie");
            CardText.SetString("While active, add X to ink'd allies and enemies", "Whiwe active, add {0} to <keyword=null>'d awwies and meanies");
            CardText.SetString("When deployed, summon copies of all enemies with X", "When depwoyed, summon copies of aww meanies wif {0}");
            CardText.SetString("When an enemy is deployed, summon a X copy of them", "When an meanie is depwoyed, summon a {0} copy of dem");
            CardText.SetString("When an enemy is deployed, take half of their X", "When an meanie is depwoyed, take hawf of deiw {0}");
            CardText.SetString("Before attacking, take X from all enemies", "Befowe attacking, take {0} fwom aww meanies");
            CardText.SetString("Before attacking, take X from a random enemy", "Befowe attacking, take {0} fwom a wandom meanie");
            CardText.SetString("While active, reduce effects of all cards in hand by", "Whiwe active, weduce effects of aww cawds in hand by <{a}>");
            CardText.SetString("Before triggering, gain X for each card in hand", "Befowe twiggewing, gain {0} fow each cawd in hand");
            CardText.SetString("When Redraw Bell is hit, gain X", "When <Redraw Bell> is hit, gain {0}");
            CardText.SetString("Before attacking, destroy all Items in hand and gain X for each", "Befowe attacking, destwoy aww <Items> in hand and gain {0} fow each");
            CardText.SetString("When an enemy is deployed, apply X to them and self", "When an meanie is depwoyed, appwy {0} to dem and sewf");
            CardText.SetString("Before triggering, copy the effects of a random ally", "Befowe twiggewing, copy de effects of a wandom awwy");
            CardText.SetString("When hit, add X to ally with the lowest attack", "When hit, add {0} to awwy wif de wowest <keyword=attack>");
            CardText.SetString("Trigger when an ally or enemy is killed", "Twigga when an awwy ow meanie is kiwwed");
            CardText.SetString("When spice'd or shell'd, apply equal X to a random enemy", "When <keyword=spice>'d ow <keyword=shell>'d, appwy equaw <keyword=shroom> to a wandom meanie");
            CardText.SetString("When X lost, deal damage to all enemies", "When {0} wost, deaw <{a}> owie to aww meanies");
            CardText.SetString("Add X to a random card in your hand", "Add {0} to a wandom cawd in yuw hand");
            CardText.SetString("Add X to all cards in your hand", "Add {0} to aww cawds in yuw hand");
            CardText.SetString("While active, allies gain X when drawn", "Whiwe active, awwies gain {0} when dwawn");
            CardText.SetString("Before attacking, gain X for each ally", "Befowe attacking, gain {0} fow each awwy");
            CardText.SetString("Destroy all Items in hand and X for each", "Destwoy aww <Items> in hand and {0} fow each");
            CardText.SetString("Kill all summoned allies and gain X for each", "Kiww aww <Summoned> awwies and gain {0} fow each");
            CardText.SetString("When any status effect applied, apply equal X to a random enemy", "When any status effect gained, appwy equaw {0} to a wandom meanie");
            CardText.SetString("When an enemy is hit with an <Item>, apply X to them", "When an meanie is hit wif an <Item>, appwy {0} to dem");
            CardText.SetString("X", "{0}");
            CardText.SetString("When hit, boost the effects of a random ally and enemy by", "When hit, boost de effects of a wandom awwy and meanie by <{a}>");
            CardText.SetString("Kill all summoned allies", "Kiww aww <Summoned> awwies");
            CardText.SetString("Gain X when an ally is sacrificed", "Gain {0} when an awwy is <keyword=sacrificed>");
            CardText.SetString("Trigger when self or ally loses X", "Twigga when sewf ow awwy woses {0}");
            CardText.SetString("When hit, restore health by", "When hit, westowe <keyword=health> by <{a}>");
            CardText.SetString("Kill ally ahead", "Kiww awwy ahead");
            CardText.SetString("X when an ally is sacrificed", "{0} when an awwy is <keyword=sacrificed>");
            CardText.SetString("While active, add consume and X to Items in your hand", "Whiwe active, add <keyword=consume> and {0} to <Items> in yuw hand");
            CardText.SetString("Also hits ally ahead", "Awso hits awwy ahead");
            CardText.SetString("Boost the effects of everyone in the battle by", "Boost de effects of aww meanies and awwies by <{a}>");
            CardText.SetString("When destroyed, apply X to all enemies and allies", "When destwoyed, appwy {0} to aww meanies and awwies");
            Cards.SetString("name_clunker_boss", "Kwunka");
            Cards.SetString("name_split_boss", "Bamboozwe");
            Cards.SetString("name_split_boss_split1", "Bam");
            Cards.SetString("name_split_boss_split2", "Boozwe");
            Cards.SetString("name_pengoon_miniboss", "Big Peng");
            Cards.SetString("name_shell_miniboss", "Bowgo");
            Cards.SetString("name_snow_miniboss", "Bumbo");
            Cards.SetString("name_demon_miniboss", "Muttonhead");
            Cards.SetString("name_monkey_miniboss", "King Moko");
            Cards.SetString("name_drek_miniboss", "Bigwoo");
            Cards.SetString("name_snowknight_miniboss", "De Snow Knight");
            Cards.SetString("name_tooth_miniboss", "Maw Jaw");
            Cards.SetString("name_shroom_miniboss", "Veiwed Wady");
            Cards.SetString("name_baby_snowbo", "Baby Snowbo");
            Cards.SetString("name_bulbhead", "Buwbhead");
            Cards.SetString("name_chungoon", "Chungoon");
            Cards.SetString("name_grumps", "Gwumps");
            Cards.SetString("name_conker", "Conka");
            Cards.SetString("name_frostinger", "Fwostinga");
            Cards.SetString("name_gobling", "Gobwing");
            Cards.SetString("name_gok", "Gok");
            Cards.SetString("name_grink", "Gwink");
            Cards.SetString("name_grog", "Gwog");
            Cards.SetString("name_grouchy", "Gwouchy");
            Cards.SetString("name_jab_joat", "Jab Joat");
            Cards.SetString("name_makoko", "Makoko");
            Cards.SetString("name_naked_gnome", "Naked Gnome");
            Cards.SetString("name_noodle", "Gwombwe");
            Cards.SetString("name_ooba_bear", "Ooba Beaw");
            Cards.SetString("name_pecan", "Pecan");
            Cards.SetString("name_pengoon", "Pengoon");
            Cards.SetString("name_pepper_witch", "Peppa Witch");
            Cards.SetString("name_popshroom", "Popshwoom");
            Cards.SetString("name_prickle", "Pwickwe");
            Cards.SetString("name_puffball", "Puffbaww");
            Cards.SetString("name_pygmy", "Pygmy");
            Cards.SetString("name_shell_witch", "Sheww Witch");
            Cards.SetString("name_shroom_gobbler", "Shwoom Gobbwa");
            Cards.SetString("name_shrootles", "Shwootwes");
            Cards.SetString("name_smakk", "Bigfoot");
            Cards.SetString("name_snoolf", "Wiwd Snoowf");
            Cards.SetString("name_winter_worm", "Winta Wowm");
            Cards.SetString("name_snowbirb", "Snowbiwb");
            Cards.SetString("name_snowbo", "Snowbo");
            Cards.SetString("name_snow_gobbler", "Snow Gobbwa");
            Cards.SetString("name_sporkypine", "Powkypine");
            Cards.SetString("name_spuncher", "Spuncha");
            Cards.SetString("name_waddlegoons", "Waddwegoons");
            Cards.SetString("name_woolly_drek", "Woowwy Dwek");
            Cards.SetString("name_ice_forge", "Ice Fowge");
            Cards.SetString("name_monkey_totem", "Moko Head");
            Cards.SetString("name_spike_wall", "Spike Waww");
            Cards.SetString("name_bitebox", "Bitebox");
            Cards.SetString("name_bling_bank", "Bwing Bank");
            Cards.SetString("name_heartforge", "Heawtfowge");
            Cards.SetString("name_heartmist_station", "Heawtmist Station");
            Cards.SetString("name_krono", "Kwono");
            Cards.SetString("name_mega_mimik", "Mega Mimik");
            Cards.SetString("name_mimik", "Mimik");
            Cards.SetString("name_mobile_campfire", "Mobiwe Campfiwe");
            Cards.SetString("name_pepper_flag", "Peppa Fwag");
            Cards.SetString("name_peppermaton", "Moko Totem");
            Cards.SetString("name_shroominator", "Shwoominatow");
            Cards.SetString("name_shroomine", "Shwoomine");
            Cards.SetString("name_shroom_launcher", "Fungo Bwasta");
            Cards.SetString("name_kobonker", "Kobonka");
            Cards.SetString("name_spice_sparklers", "Spice Spawkwews");
            Cards.SetString("name_goat_totem", "Totem of de Goat");
            Cards.SetString("name_woodhead", "Woodhead");
            Cards.SetString("name_berry_pet", "Booshu");
            Cards.SetString("name_big_berry", "Big Bewwy");
            Cards.SetString("name_blunky", "Bwunky");
            Cards.SetString("name_bombom", "Bombom");
            Cards.SetString("name_bonnie", "Bonnie");
            Cards.SetString("name_chompom", "Chompom");
            Cards.SetString("name_demon_pet", "Woki");
            Cards.SetString("name_dimona", "Dimona");
            Cards.SetString("name_draw_pet", "Sneezwe");
            Cards.SetString("name_firefist", "Fiwefist");
            Cards.SetString("name_foxee", "Foxee");
            Cards.SetString("name_tooth_pet", "Spike");
            Cards.SetString("name_lil_berry", "Wiw' Bewwy");
            Cards.SetString("name_junjun", "Junjun");
            Cards.SetString("name_pootie", "Pootie");
            Cards.SetString("name_pyra", "Pywa");
            Cards.SetString("name_shelly", "Shewwy");
            Cards.SetString("name_snobble", "Snobbwe");
            Cards.SetString("name_snoffel", "Snoffew");
            Cards.SetString("name_snow_pet", "Snoof");
            Cards.SetString("name_tiny_tyko", "Tiny Tyko");
            Cards.SetString("name_tusk", "Tusk");
            Cards.SetString("name_wallop", "Wawwop");
            Cards.SetString("name_wort", "Wowt");
            Cards.SetString("name_yuki", "Yuki");
            Cards.SetString("name_berry_basket", "Bewwy Basket");
            Cards.SetString("name_berry_bell", "Bewwy Beww");
            Cards.SetString("name_berry_blade", "Bewwy Bwade");
            Cards.SetString("name_blaze_tea", "Bwaze Tea");
            Cards.SetString("name_tar_blade", "Taw Bwade");
            Cards.SetString("name_demonheart", "Demonheawt");
            Cards.SetString("name_blank_mask", "Bwank Mask");
            Cards.SetString("name_dragon_pepper", "Dwagon Peppa");
            Cards.SetString("name_flamewater", "Fwamewata");
            Cards.SetString("name_frost_bell", "Fwost Beww");
            Cards.SetString("name_frostbloom", "Fwostbwoom");
            Cards.SetString("name_hongos_hammer", "Hongo's Hamma");
            Cards.SetString("name_grabber", "Gwabba");
            Cards.SetString("name_ice_dice", "Ice Dice");
            Cards.SetString("name_junjun_mask", "Junjun Mask");
            Cards.SetString("name_molten_dip", "Mowten Dip");
            Cards.SetString("name_noomlin_biscuit", "Noomwin Biscuit");
            Cards.SetString("name_nutshell_cake", "Nutsheww Cake");
            Cards.SetString("name_peppereaper", "Peppeweapa");
            Cards.SetString("name_peppering", "Peppewing");
            Cards.SetString("name_pinkberry_juice", "Pinkbewwy Juice");
            Cards.SetString("name_pombomb", "Pombomb");
            Cards.SetString("name_scrap_pile", "Scwap Piwe");
            Cards.SetString("name_shellbo", "Shewwbo");
            Cards.SetString("name_shell_shield", "Sheww Shiewd");
            Cards.SetString("name_blizzard_bottle", "Bwizzawd Bottwe");
            Cards.SetString("name_slapcrackers", "Swapcwackews");
            Cards.SetString("name_snowcake", "Snowcake");
            Cards.SetString("name_snow_globe", "Stowm Gwobe");
            Cards.SetString("name_snow_stick", "Snow Stick");
            Cards.SetString("name_spice_stones", "Spice Stones");
            Cards.SetString("name_spore_pack", "Spowe Pack");
            Cards.SetString("name_stormbear_spirit", "Stowmbeaw Spiwit");
            Cards.SetString("name_sunburst", "Sunbuwst Tootoo");
            Cards.SetString("name_sunlight_drum", "Sunwight Dwum");
            Cards.SetString("name_sun_rod", "Sun Wod");
            Cards.SetString("name_sword", "Scwappy Swowd");
            Cards.SetString("flavour_sword", "A twaditionaw twusty weapon");
            Cards.SetString("flavour_woodhead", "Does nothing, but wiww take a hit fow yu :)");
            Cards.SetString("flavour_naked_gnome", "Does absowutewy nothing...");
            Cards.SetString("type_boss", "Big Meanie");
            Cards.SetString("type_miniboss", "Meanieboss");
            Cards.SetString("type_enemy", "Meanie");
            Cards.SetString("type_leader", "Weada");
            Cards.SetString("type_companion", "Fwen");
            Cards.SetString("type_item", "Item");
            Cards.SetString("type_clunker", "Cwunka");
            Cards.SetString("type_summoned", "Shade");
            Cards.SetString("name_frost_miniboss", "De Winga");
            Cards.SetString("name_berry_miniboss", "Queen Gwobewwy");
            Cards.SetString("name_earth_berry", "Eawth Bewwy");
            Cards.SetString("name_berry_witch", "Bewwy Witch");
            Cards.SetString("name_ice_lantern", "Ice Wantewn");
            Cards.SetString("name_fungun", "Fungun");
            Cards.SetString("name_groff", "Gwoff");
            Cards.SetString("name_taiga", "Taiga");
            Cards.SetString("name_fallow", "Fawwow");
            Cards.SetString("name_tigris", "Tigwis");
            Cards.SetString("name_beepop", "Beepop");
            Cards.SetString("name_fallow_mask", "Fawwow Mask");
            Cards.SetString("name_tigris_mask", "Tigwis Mask");
            Cards.SetString("name_beepop_mask", "Beepop Mask");
            Cards.SetString("injured", "injuwed");
            Cards.SetString("name_kernel", "Kewnew");
            Cards.SetString("name_marrow", "Mawwow");
            Cards.SetString("name_egg", "Egg");
            Cards.SetString("name_dregg", "Dwegg");
            Cards.SetString("name_van_jun", "Van Jun");
            Cards.SetString("name_monch", "Monch");
            Cards.SetString("name_berry_sis", "Bewwy Sis");
            Cards.SetString("name_splinter", "Spwinta");
            Cards.SetString("name_vesta", "Vesta");
            Cards.SetString("name_shen", "Shen");
            Cards.SetString("name_devicro", "Devicwo");
            Cards.SetString("name_chikichi", "Chikichi");
            Cards.SetString("name_chikani", "Chikani");
            Cards.SetString("name_chikasan", "Chikasan");
            Cards.SetString("name_chikashi", "Chikashi");
            Cards.SetString("name_chikagoru", "Chikagowu");
            Cards.SetString("name_pom", "Pom");
            Cards.SetString("name_sheepopper", "Sheepoppa");
            Cards.SetString("name_leech", "Weech");
            Cards.SetString("name_pom_mask", "Pom Mask");
            Cards.SetString("name_sheepopper_mask", "Sheepoppa Mask");
            Cards.SetString("name_leech_mask", "Weech Mask");
            Cards.SetString("name_azul_candle", "Azuw Candwe");
            Cards.SetString("name_azul_battle_axe", "Azuw Battwe Axe");
            Cards.SetString("name_azul_skull", "Azuw Skuww");
            Cards.SetString("name_tiger_skull", "Tiga Skuww");
            Cards.SetString("name_yeti_skull", "Yeti Skuww");
            Cards.SetString("name_soulbound_skulls", "Souwbound Skuwws");
            Cards.SetString("name_shade_wisp", "Shade Wisp");
            Cards.SetString("name_shade_clay", "Shade Cway");
            Cards.SetString("name_skullmist_tea", "Skuwwmist Tea");
            Cards.SetString("name_smog", "Smog");
            Cards.SetString("name_pawpaw", "Paw Paw");
            Cards.SetString("name_portable_workbench", "Powtabwe Wowkbench");
            Cards.SetString("name_sunglass_chime", "Sungwass Chime");
            Cards.SetString("name_gachapomper", "Gachapompa");
            Cards.SetString("name_tootordion", "Tootowdion");
            Cards.SetString("name_blundertank", "Bwundewtank");
            Cards.SetString("name_plinker", "Pwinka");
            Cards.SetString("name_icgm", "I.C.G.M");
            Cards.SetString("name_bombarder", "Bombawda");
            Cards.SetString("name_haze_balloon", "Haze Bawwoon");
            Cards.SetString("name_hazeblazer", "Hazebwaza");
            Cards.SetString("flavour_can_be_fixed", "Maybe it can be fixed...");
            Cards.SetString("name_biji", "Biji");
            Cards.SetString("name_mini_mika", "Mini Mika");
            Cards.SetString("name_lynja", "Awwoy");
            Cards.SetString("name_folby", "Fowby");
            Cards.SetString("name_scaven", "Scaven");
            Cards.SetString("name_kreggo", "Kweggo");
            Cards.SetString("name_nom_stomp", "Nom & Stompy");
            Cards.SetString("name_tinkerson", "Tinkewson Jw.");
            Cards.SetString("name_bom_barrel", "Bom Bawwew");
            Cards.SetString("name_springbom", "Cwockwowk Bom");
            Cards.SetString("name_blaze_bom", "Bwaze Bom");
            Cards.SetString("name_frenzy_wrench", "Fwenzy Wwench");
            Cards.SetString("name_suncream", "Suncweam");
            Cards.SetString("name_gigis_gizmo", "Gigi's Gizmo");
            Cards.SetString("name_gigis_cookie_box", "Gigi's Cookie Box");
            Cards.SetString("name_magma_booster", "Magma Boosta");
            Cards.SetString("name_lumin_lantern", "Wumin Wantewn");
            Cards.SetString("name_frostbite_shard", "Fwostbite Shawd");
            Cards.SetString("name_bink", "B.I.N.K");
            Cards.SetString("name_blizzard_unit", "Supewsnowa");
            Cards.SetString("name_protostomper", "Pwoto-Stompa");
            Cards.SetString("name_forging_stone", "Fowging Stove");
            Cards.SetString("name_mini_muncher", "Mini Muncha");
            Cards.SetString("name_haze_keg", "Haze Keg");
            Cards.SetString("name_foggy_brew", "Foggy Bwew");
            Cards.SetString("name_junkhead", "Junkhead");
            Cards.SetString("name_sunsong_box", "Sunsong Box");
            Cards.SetString("name_snowzooka", "Snowzooka");
            Cards.SetString("name_ink_flask", "Fwask of Ink");
            Cards.SetString("name_gearhammer", "Geawhamma");
            Cards.SetString("name_junk", "Junk");
            Cards.SetString("name_shroom_boss", "Twuffwe");
            Cards.SetString("name_moko_boss", "Infewnoko");
            Cards.SetString("name_frost_guardian", "Fwost Guawdian");
            Cards.SetString("name_block_miniboss", "Numskuww");
            Cards.SetString("name_wild_miniboss", "Wazow");
            Cards.SetString("name_warthog", "Wawthog");
            Cards.SetString("name_hog", "Hog");
            Cards.SetString("name_rockhog", "Wockhog");
            Cards.SetString("name_krab", "Kwab");
            Cards.SetString("name_krawler", "Kwawwa");
            Cards.SetString("name_burster", "Buwsta");
            Cards.SetString("name_broken_vase", "Bwoken Vase");
            Cards.SetString("name_lumin_glue", "Wumin Goop");
            Cards.SetString("name_lumin_vase", "De Wumin Vase");
            Cards.SetString("name_fizzle", "Fizzwe");
            Cards.SetString("flavour_can_fix_something", "Couwd be used to fix something...");
            Cards.SetString("name_frost_jailer", "Fwost Jaiwa");
            Cards.SetString("name_frost_crusher", "Fwost Cwusha");
            Cards.SetString("name_frost_archer", "Fwost Wanca");
            Cards.SetString("name_frost_bomber", "Fwost Bomba");
            Cards.SetString("name_frost_junker", "Fwost Junka");
            Cards.SetString("name_frost_muncher", "Fwost Muncha");
            Cards.SetString("name_willow", "Wiwwow");
            Cards.SetString("name_tenticle", "Tentickwe");
            Cards.SetString("name_bigshot", "Jumbo");
            Cards.SetString("name_gazi", "Wiw' Gazi");
            Cards.SetString("name_bad_bombarder", "Bombawda");
            Cards.SetString("name_grizzle", "Gwizzwe");
            Cards.SetString("name_plum", "Pwum");
            Cards.SetString("name_minimoko", "Minimoko");
            Cards.SetString("name_gogong", "Gogong");
            Cards.SetString("name_gobbler", "Gobbwa");
            Cards.SetString("name_gunk", "Gunk Fwuit");
            Cards.SetString("name_beeberry_miniboss", "Bogbewwy");
            Cards.SetString("name_ink_miniboss", "Wumako");
            Cards.SetString("name_smash_miniboss", "Weeviw");
            Cards.SetString("name_lump", "Wump");
            Cards.SetString("name_beeberry", "Beebewwy");
            Cards.SetString("name_tako", "Octako");
            Cards.SetString("name_dungrok", "Dungwok");
            Cards.SetString("name_blaze_beetles", "Bwaze Beetwes");
            Cards.SetString("name_gunker", "Gunkback");
            Cards.SetString("name_gunk_gobbler", "Gunk Gobbwa");
            Cards.SetString("name_ink_totem", "Octobom");
            Cards.SetString("name_zoomlin_nest", "Zoomwin Nest");
            Cards.SetString("name_ink_pet", "Binku");
            Cards.SetString("name_gojiber", "Gojiba");
            Cards.SetString("name_lumin_cat", "Wupa");
            Cards.SetString("name_roibos", "Woibos");
            Cards.SetString("name_blue", "Nova");
            Cards.SetString("name_pimento", "Pimento");
            Cards.SetString("name_fulbert", "Fuwbewt");
            Cards.SetString("name_headless", "Gweevwe");
            Cards.SetString("name_baker", "De Baka");
            Cards.SetString("name_spoof", "Spoof");
            Cards.SetString("name_zula", "Zuwa");
            Cards.SetString("name_havok", "Toasta");
            Cards.SetString("name_mama_tinkerson", "Mama Tinkewson");
            Cards.SetString("name_ruckus", "Needwe");
            Cards.SetString("name_knuckles", "Knuckwes");
            Cards.SetString("name_snuffer", "Snuffa");
            Cards.SetString("name_snuffer_mask", "Snuffa Mask");
            Cards.SetString("name_bonescraper", "Bonescwapa");
            Cards.SetString("name_skullmuffin", "Skuww Muffin");
            Cards.SetString("name_kraken", "Kwaken");
            Cards.SetString("name_zoomlin_wafers", "Zoomwin Wafews");
            Cards.SetString("name_barrage_miniboss", "Nimbus");
            Challenges.SetString("Challenge Apply Snow", "Appwy {0} Snow");
            Challenges.SetString("Challenge Kill Enemies", "Kiww {0} meanies");
            Challenges.SetString("Challenge Recall Companions", "Wecaww {0} Fwens");
            Challenges.SetString("Challenge Kill Demonized", "Kiww {0} Demonized meanies");
            Challenges.SetString("Challenge Buy Discounts", "Buy {0} discounted items");
            Challenges.SetString("Challenge Kill With Teeth", "Kiww {0} meanies wif Teeth");
            Challenges.SetString("Challenge 3x Combo", "Achieve a 3x Kiww Combo");
            Challenges.SetString("Challenge 4x Combo", "Achieve a 4x Kiww Combo");
            Challenges.SetString("Challenge 6x Combo", "Achieve a 6x Kiww Combo");
            Challenges.SetString("Challenge Redraw Bell", "Hit Wedwaw Beww {0} times");
            Challenges.SetString("Challenge Kill With Clunkers", "Kiww {0} meanies wif Cwunkews");
            Challenges.SetString("Challenge Kill With Items", "Kiww {0} meanies wif Items");
            Challenges.SetString("Challenge Block With Clunkers", "Bwock {0} hits wif Cwunkews");
            Challenges.SetString("Challenge Kill Miniboss With Clunker", "Kiww a Meanieboss wif a Cwunka");
            Challenges.SetString("Challenge Buy Crowns", "Buy {0} Cwowns");
            Challenges.SetString("Challenge Blings From Single Battle", "Gain 50 Bwings fwom a singwe battwe");
            Challenges.SetString("Challenge Equip Charms", "Equip {0} Chawms");
            Challenges.SetString("Challenge Self Damage", "Deaw {0} owie to yuw own team");
            Challenges.SetString("Challenge Damage", "Deaw {0} owie");
            Challenges.SetString("Challenge Summon", "Summon {0} awwies");
            Challenges.SetString("Challenge Apply Scrap", "Add {0} Scwap to Cwunkews");
            Challenges.SetString("Reward Pet House", "Pet House Unwocked!");
            Challenges.SetString("Reward Pet", "New Pet Unwocked!");
            Challenges.SetString("Reward Inventors Hut", "Inventow's Hut Unwocked!");
            Challenges.SetString("Reward Item", "New Item Unwocked!");
            Challenges.SetString("Reward Hot Spring", "Hot Spwing Unwocked!");
            Challenges.SetString("Reward Companion", "New Fwen Unwocked!");
            Challenges.SetString("Reward Tribe", "New Twibe Unwocked!");
            Challenges.SetString("Challenge Locked", "Wocked");
            Challenges.SetString("Challenge Spend Blings", "Spend {0} Bwings");
            Challenges.SetString("Reward Icebreakers", "Icebweaka Cabin Unwocked!");
            Challenges.SetString("Reward Event", "New Map Event Unwocked!");
            Challenges.SetString("Challenge Blings From Goblings", "Gain {0} Bwings fwom Gobwings");
            Challenges.SetString("Challenge Kill With Shroom", "Kiww {0} meanies wif Shwoom");
            Challenges.SetString("Challenge Feed Muncher", "Feed de Muncha {0} times");
            Challenges.SetString("Challenge Gain Clunkers", "Add {0} Cwunkews to yuw deck");
            Challenges.SetString("Challenge Apply Shell", "Appwy {0} Sheww");
            Challenges.SetString("Challenge Kill With Smackback", "Use Smackback to kiww {0} meanies");
            Challenges.SetString("Challenge Lone Survivor", "Win a battwe wif just yuw Weada wemaining");
            Challenges.SetString("Challenge Big Hit 1", "Deaw 50 owie in a singwe hit");
            Challenges.SetString("Challenge Big Hit 2", "Deaw 100 owie in a singwe hit");
            Challenges.SetString("Challenge Sacrifice", "Sacwifice 5 awwies in a singwe battwe");
            Challenges.SetString("Challenge Sword Final Boss", "Defeat de Fwost Guawdian wif a Scwappy Swowd");
            Challenges.SetString("Challenge Big Snow", "Stack 15 Snow on a singwe tawget");
            Challenges.SetString("Challenge Big Shell", "Stack 50 Sheww on a singwe tawget");
            Challenges.SetString("Challenge Big Shroom", "Stack 20 Shwoom on a singwe tawget");
            Challenges.SetString("Challenge Big Block", "Stack 5 Bwock on a singwe tawget");
            Challenges.SetString("Challenge Naked Gnome", "Spawe de Naked Gnome");
            Challenges.SetString("Challenge Feed Muncher Food", "Feed de Muncha a Consume item");
            Challenges.SetString("Challenge Daily Run", "Win a Daiwy Voyage");
            Challenges.SetString("Challenge Shop Charms", "Buy 3 Chawms fwom a singwe shop");
            Challenges.SetString("Reward Charm", "New Chawm Unwocked!");
            Challenges.SetString("Challenge Lone Survivor Name", "Wone Suwvivow");
            Challenges.SetString("Challenge Big Hit 1 Name", "Big Hitta");
            Challenges.SetString("Challenge Big Hit 2 Name", "Bigga Hitta");
            Challenges.SetString("Challenge Sacrifice Name", "Wituaw");
            Challenges.SetString("Challenge Sword Final Boss Name", "One Punch");
            Challenges.SetString("Challenge Big Snow Name", "Snowbaww Fight");
            Challenges.SetString("Challenge Big Shell Name", "Tough Nut");
            Challenges.SetString("Challenge Big Shroom Name", "Toxic");
            Challenges.SetString("Challenge Big Block Name", "Icemasta");
            Challenges.SetString("Challenge Naked Gnome Name", "Gnome Fwiend");
            Challenges.SetString("Challenge Survive King Moko Name", "Wong Wive de King");
            Challenges.SetString("Challenge Survive King Moko", "Suwvive an attack fwom King Moko and win de battwe");
            Challenges.SetString("Challenge Feed Muncher Food Name", "Feed de Beast");
            Challenges.SetString("Challenge Daily Run Name", "Bawwoonist");
            Challenges.SetString("Challenge Shop Charms Name", "High Wowwa");
            Challenges.SetString("Challenge Win Streak Name", "Undefeated");
            Challenges.SetString("Challenge Win Streak", "Achieve a 3 Win Stweak");
            Challenges.SetString("Challenge True Win", "Defeat de Heawt of de Stowm");
            Challenges.SetString("Challenge True Win Name", "Sunbwinga");
            Challenges.SetString("Challenge Call Enemy Waves", "Hit de Meanie Wave Beww {0} times");
            Challenges.SetString("Challenge Apply Ink To Team", "Appwy {0} Ink to yuw own team");
            Challenges.SetString("Challenge Gnome Win Name", "Gnomebwinga");
            Challenges.SetString("Challenge Gnome Win", "Win a wun wif de Naked Gnome on yuw team");
            Challenges.SetString("Challenge Hoarder Name", "Hoawda");
            Challenges.SetString("Challenge Hoarder", "Have 12 ow mowe cawds in yuw hand at once");
            Challenges.SetString("Challenge Charmless Name", "Chawmwess");
            Challenges.SetString("Challenge Charmless", "Win a wun wifout any Chawms equipped");
            Challenges.SetString("Challenge Frenzy Name", "Wampage");
            Challenges.SetString("Challenge Frenzy", "Stack x10 Fwenzy on a singwe tawget");
            Challenges.SetString("Challenge Win With Pet Name", "Best Fwiends");
            Challenges.SetString("Challenge Win With Pet", "Win a wun wif yuw pet as yuw onwy active Fwen");
            Challenges.SetString("Challenge Minimalist Name", "Minimawist");
            Challenges.SetString("Challenge Minimalist", "Win a battwe wifout any cawds weft in yuw deck");
            Challenges.SetString("Challenge High Health Name", "Bewwy Good");
            Challenges.SetString("Challenge High Health", "Have 30 ow mowe Heawth on a singwe unit");
            Challenges.SetString("Challenge Tribe 1 Name", "Snowdwewwa");
            Challenges.SetString("Challenge Tribe 1", "Win a wun wif de Snowdwewwa twibe");
            Challenges.SetString("Challenge Tribe 2 Name", "Shademanca");
            Challenges.SetString("Challenge Tribe 2", "Win a wun wif de Shademanca twibe");
            Challenges.SetString("Challenge Tribe 3 Name", "Cwunkmasta");
            Challenges.SetString("Challenge Tribe 3", "Win a wun wif de Cwunkmasta twibe");
            Challenges.SetString("Challenge Boss Without SnowName", "Beastmasta");
            Challenges.SetString("Challenge Boss Without Snow", "Defeat a Big Meanie wifout appwying Snow to dem");
            Credits.SetString("Thank you for playing", "Thank yu fow pwaying!");
            Credits.SetString("Programming And Design", "Pwogwamming & Design");
            Credits.SetString("Art And Design", "Awt & Design");
            Credits.SetString("Music", "Music");
            Credits.SetString("Sound Design", "Sound Design");
            Credits.SetString("Business Development", "Business Devewopment Managews");
            Credits.SetString("Published By", "Pubwishing Team");
            Credits.SetString("QA", "QA");
            Credits.SetString("Product Marketing", "Pwoduct Mawketing Coowdinatows");
            Credits.SetString("Promo Art", "Pwomo Awt");
            Credits.SetString("Video Editing", "Video Editing");
            Credits.SetString("Japanese Localization", "Japanese Wocawization");
            Credits.SetString("Korean Localization", "Kowean Wocawization");
            Credits.SetString("Chinese Localization", "Chinese Wocawization");
            Credits.SetString("Playtesters", "Pwaytestews");
            Credits.SetString("Special Thanks", "Speciaw Thanks");
            Credits.SetString("Marketing Localization", "Mawketing Wocawization");
            Credits.SetString("Controller Support", "Contwowwa Suppowt");
            Credits.SetString("PR", "PW");
            Credits.SetString("Friends From China", "Fwiends Fwom China");
            Credits.SetString("Business Development Manager", "Business Devewopment Managa");
            Credits.SetString("Lead Developers", "Wead Devewopews");
            Credits.SetString("Developers", "Devewopews");
            Credits.SetString("Testers", "Testews");
            Credits.SetString("Lead Project Manager", "Wead Pwoject Managa");
            Credits.SetString("Project Manager", "Pwoject Managa");
            Credits.SetString("Mod Support", "");
            Effects.SetString("add_something", "[Aa]dd {0}");
            Effects.SetString("apply_something", "[Aa]ppwy {0}");
            Effects.SetString("apply_equal_something", "[Aa]ppwy equaw {0}");
            Effects.SetString("gain_something", "[Gg]ain {0}");
            Effects.SetString("enemies_gain_something", "[Ee]nemies gain {0}");
            Effects.SetString("allies_gain_something", "[Aa]wwies gain {0}");
            Effects.SetString("allies_in_row_gain_something", "[Aa]wwies in de wow gain {0}");
            Effects.SetString("allies_and_enemies_gain_something", "[Aa]ww awwies and meanies gain {0}");
            Effects.SetString("lose_something", "[Ww]ose {0}");
            Effects.SetString("count_down_something", "[Cc]ount down {0}");
            Effects.SetString("reduce_something", "[Ww]educe {0}");
            Effects.SetString("reduce_attackers_something", "[Ww]educe de attacka's {0}");
            Effects.SetString("increase_something", "[Ii]ncwease {0}");
            Effects.SetString("drop_something", "[Dd]wop {0}");
            Effects.SetString("restore_something", "[Ww]estowe {0}");
            Effects.SetString("restore_their_something", "[Ww]estowe deiw {0}");
            Effects.SetString("deal_damage", "[Dd]eaw <{a}> owie");
            Effects.SetString("deal_equal_damage", "[Dd]eaw equaw owie");
            Effects.SetString("deal_additional_damage", "[Dd]eaw <{a}> additionaw owie");
            Effects.SetString("increase_all_applied_by", "[Ii]ncwease aww {0} appwied by <{a}>");
            Effects.SetString("by", "{0} by <{a}>");
            Effects.SetString("health_by", "<keyword=health> by {0}");
            Effects.SetString("attack_by", "<keyword=attack> by {0}");
            Effects.SetString("counter_by", "<keyword=counter> by {0}");
            Effects.SetString("summon_something", "[Ss]ummon {0}");
            Effects.SetString("reduce_by", "[Ww]educe by {0}");
            Effects.SetString("increase_by", "[Ii]ncwease by {0}");
            Effects.SetString("increased_by", "{0} is incweased by <{a}>");
            Effects.SetString("double_amount", "[Dd]oubwe de amount");
            Effects.SetString("double_amount_and", "[Dd]oubwe de amount and {0}");
            Effects.SetString("on_kill_do_something", "On kiww, {0}");
            Effects.SetString("increase_all_applied", "[Ii]ncwease aww {0} appwied");
            Effects.SetString("when_deployed_do_something", "When depwoyed, {0}");
            Effects.SetString("when_destroyed_do_something", "When destwoyed, {0}");
            Effects.SetString("when_ally_attacks_to_something", "When an awwy attacks, {0}");
            Effects.SetString("when_enemy_attacks_do_something", "When an meanie attacks, {0}");
            Effects.SetString("when_healed_do_something", "When heawed, {0}");
            Effects.SetString("when_hit_do_something", "When hit, {0}");
            Effects.SetString("when_anything_shroomed", "Wheneva anything is <keyword=shroom>'d, {0}");
            Effects.SetString("when_anything_snowed", "Wheneva anything is <keyword=snow>'d, {0}");
            Effects.SetString("when_snowed", "When <keyword=snow>'d, {0}");
            Effects.SetString("while_active", "Whiwe active, {0}");
            Effects.SetString("to_random_ally", "{0} to a wandom awwy");
            Effects.SetString("to_random_enemy", "{0} to a wandom meanie");
            Effects.SetString("to_random_ally_or_enemy", "{0} to a wandom awwy ow meanie");
            Effects.SetString("to_all_allies", "{0} to aww awwies");
            Effects.SetString("to_all_enemies", "{0} to aww meanies");
            Effects.SetString("to_allies_in_row", "{0} to awwies in de wow");
            Effects.SetString("to_self_and_allies_in_row", "{0} to sewf and awwies in de wow");
            Effects.SetString("to_enemies_in_row", "{0} to meanies in de wow");
            Effects.SetString("to_everyone", "{0} to evewyone in de battwe");
            Effects.SetString("to_front_ally", "{0} to fwont awwy");
            Effects.SetString("to_front_allies", "{0} to fwont awwies");
            Effects.SetString("to_ally_ahead", "{0} to awwy ahead");
            Effects.SetString("to_all_undamaged_enemies", "{0} to aww unowied meanies");
            Effects.SetString("to_damaged_targets", "{0} to owied tawgets");
            Effects.SetString("to_shelled_targets", "{0} to <keyword=shell>'d tawgets");
            Effects.SetString("to_snowed_targets", "{0} to <keyword=snow>'d tawgets");
            Effects.SetString("to_attacker", "{0} to de attacka");
            Effects.SetString("to_them", "{0} to dem");
            Effects.SetString("to_crown_allies", "{0} to <sprite name=crown>'d awwies");
            Effects.SetString("equal_to_damage_dealt", "{0} equaw to owie deawt");
            Effects.SetString("to_front_ally_equal_to_health_taken", "{0} to yuw fwont awwy equaw to <keyword=health> taken");
            Effects.SetString("on_kill", "{0} on kiww");
            Effects.SetString("when_hit", "{0} when hit");
            Effects.SetString("when_healed", "{0} when heawed");
            Effects.SetString("when_played", "{0} when pwayed");
            Effects.SetString("when_ally_attacks", "{0} when an awwy attacks");
            Effects.SetString("when_ally_in_row_attacks", "{0} when an awwy in de wow attacks");
            Effects.SetString("when_ally_hit", "{0} when an awwy is hit");
            Effects.SetString("when_ally_healed", "{0} when an awwy is heawed");
            Effects.SetString("when_ally_killed", "{0} when an awwy is kiwwed");
            Effects.SetString("when_damaged_by_something", "{0} when owied by {e}");
            Effects.SetString("when_something_reaches_amount", "{0} when {e} weaches <{a}>");
            Effects.SetString("trigger", "[Tt]wigga");
            Effects.SetString("trigger_against_target", "[Tt]wigga against de tawget");
            Effects.SetString("trigger_against_anything_hit_by", "[Tt]wigga against anything dat is hit wif {0}");
            Effects.SetString("eat_random_ally", "Eat a wandom awwy, absowbing deiw <keyword=attack>, <keyword=health> and effects");
            Effects.SetString("eat_allies_in_row", "Eat awwies in de wow, absowbing deiw <keyword=attack> and <keyword=health>");
            Effects.SetString("escape_from_battle", "[Ee]scape fwom de battwe");
            Effects.SetString("boost_front_ally", "[Bb]oost de effects of de fwont awwy");
            Effects.SetString("boost_cards_in_hand", "[Bb]oost de effects of de cawds in yuw hand");
            Effects.SetString("allies_become_immune_to", "[Aa]wwies become immune to {0}");
            Effects.SetString("while_damaged", "Whiwe owied, {0}");
            Effects.SetString("double_something", "[Dd]oubwe {0}");
            Effects.SetString("cards_in_hand", "{0} in hand");
            Effects.SetString("destroy_self", "[Dd]estwoy sewf");
            Effects.SetString("tar_blades", "<Tar Blades>");
            Effects.SetString("deal_additional_damage_equal_to", "[Dd]eaw additionaw owie equaw to {0}");
            Effects.SetString("on_all_cards", "{0} on aww cawds");
            Effects.SetString("when_ally_healed_do_something", "When an awwy is heawed, {0}");
            Effects.SetString("when_ally_hit_do_something", "When an awwy is hit, {0}");
            Effects.SetString("make_something", "[Mm]ake {0}");
            Effects.SetString("when_enemy_killed_do_something", "When an meanie is kiwwed, {0}");
            Effects.SetString("when_anything_damaged_by_shroom", "Wheneva anything takes owie fwom <keyword=shroom>, {0}");
            Effects.SetString("card_text_ice_forge", "Whiwe active, add <+{s0}><keyword=attack> to aww awwies and <-{s1}><keyword=attack> to aww meanies");
            Effects.SetString("equal_something", "[Ee]quaw {0}");
            Effects.SetString("double_targets_something", "[Dd]oubwe de tawget's {0}");
            Effects.SetString("to_card_in_hand", "{0} to a cawd in yuw hand");
            Effects.SetString("card_text_must_be_snowed", "Tawget must be <keyword=snow>'d");
            Effects.SetString("copy_of_an_ally", "a copy of an awwy");
            Effects.SetString("restore_all_allies", "[Ww]estowe aww awwies' {0}");
            Effects.SetString("equal_to_something", "[Ee]quaw to {0}");
            Effects.SetString("deal_damage_equal_to", "[Dd]eaw owie equaw to {0}");
            Effects.SetString("to_frosted_targets", "{0} to <keyword=frost>'d tawgets");
            Effects.SetString("to_ally_behind", "{0} to awwy behind");
            Effects.SetString("against_attacker", "{0} against de attacka");
            Effects.SetString("trigger_allies", "[Tt]wigga awwies");
            Effects.SetString("against_target", "{0} against de tawget");
            Effects.SetString("against_anything_hit_by", "{0} against anything dat is hit wif {e}");
            Effects.SetString("card_text_must_be_somethinged", "Tawget must be {e}'d");
            Effects.SetString("take_something", "[Tt]ake {0}");
            Effects.SetString("take_something_from", "[Tt]ake {e} fwom {0}");
            Effects.SetString("a_random_ally", "a wandom awwy");
            Effects.SetString("in_order_to_attack", "{0} in owda to attack");
            Effects.SetString("on_board", "{0} on de boawd");
            Effects.SetString("to_all_somethinged_enemies", "{0} to aww {e}'d meanies");
            Effects.SetString("their_something", "deiw {0}");
            Effects.SetString("lost_something", "wost {0}");
            Effects.SetString("current_something", "cuwwent {0}");
            Effects.SetString("with_health", "{0} wif <{a}><keyword=health>");
            Effects.SetString("when_ally_sacrificed_do_something", "When an awwy is <keyword=sacrificed>, {0}");
            Effects.SetString("when_sacrificed_do_something", "When <keyword=sacrificed>, {0}");
            Effects.SetString("to_all_summoned_allies", "{0} to aww <Summoned> awwies");
            Effects.SetString("an_ally", "an awwy");
            Effects.SetString("an_enemy", "an meanie");
            Effects.SetString("an_item", "an <Item> in yuw hand");
            Effects.SetString("copy_of", "a copy of {0}");
            Effects.SetString("copy_effects_of", "copy de effects of {0}");
            Effects.SetString("on_your_side", "{0} on yuw side");
            Effects.SetString("on_enemy_side", "{0} on de meanie side");
            Effects.SetString("a_random_enemy", "a wandom meanie");
            Effects.SetString("to_front_enemy", "{0} to fwont meanie");
            Effects.SetString("all_allies", "aww awwies");
            Effects.SetString("all_enemies", "aww meanies");
            Effects.SetString("when_health_lost_do_something", "When <keyword=health> wost, {0}");
            Effects.SetString("retain_something", "[Ww]etain {0}");
            Effects.SetString("all_allies_something", "aww awwies {0}");
            Effects.SetString("all_enemies_something", "aww meanies {0}");
            Effects.SetString("allies_in_row_something", "awwies in de wow {0}");
            Effects.SetString("enemies_in_row_something", "meanies in de wow {0}");
            Effects.SetString("when_enemy_with_shroom_dies_do_something", "When a <keyword=shroom>'d meanie dies, {0}");
            Effects.SetString("also_hits_something", "[Aa]wso hits {0}");
            Effects.SetString("ally_ahead", "awwy ahead");
            Effects.SetString("ally_behind", "awwy behind");
            Effects.SetString("to_everything", "{0} to EVEWYTHING");
            Effects.SetString("all_items", "<Items> in yuw hand");
            Effects.SetString("to_cards_in_hand", "{0} to cawds in yuw hand");
            Effects.SetString("to_items_in_hand", "{0} to <Items> in yuw hand");
            Effects.SetString("kill_something", "[Kk]iww {0}");
            Effects.SetString("when_ally_sacrificed", "{0} when an awwy is <keyword=sacrificed>");
            Effects.SetString("when_built_do_something", "When buiwt, {0}");
            Effects.SetString("to_hand", "{0} to yuw hand");
            Effects.SetString("card_destroy_card_in_hand", "Destwoy a cawd in yuw hand");
            Effects.SetString("trigger_all_allies", "[Tt]wigga aww awwies");
            Effects.SetString("give_something", "[Gg]ive {0}");
            Effects.SetString("to_self_and_allies", "{0} to sewf and awwies");
            Effects.SetString("when_enemy_deployed_do_something", "When meanie depwoyed, {0}");
            Effects.SetString("when_ally_deployed_do_something", "When awwy depwoyed, {0}");
            Effects.SetString("copy_their_effects", "copy deiw effects");
            Effects.SetString("when_ally_killed_do_something", "When an awwy is kiwwed, {0}");
            Journal.SetString("journal luminice 3", "De town of <b><#805D46>Snowdweww</color></b> is buiwt awound a massive gwacia of Wuminice, pwoviding its inhabitants wif a wawm atmosphewe, soft wight, and wunning wata. Making fow a safe haven fwom de unfowgiving fwost.");
            Journal.SetString("journal shades title", "Shades");
            Journal.SetString("journal luminice 2", "Dese Wuminice shawds possess a unique abiwity dat ampwifies de effects of those who howd dem, ow de items dey awe infused into.");
            Journal.SetString("journal luminice 1", "Wuminice is fowmed duwing a wawe phenomenon whewe wata fwom ewwupting hot spwings is instantwy fwozen, cweating a speciaw type of ice dat feews wawm to de touch.");
            Journal.SetString("journal gnomes title", "Gnomes");
            Journal.SetString("journal wildfrost title", "DE WIWDFWOST");
            Journal.SetString("journal wildfrost part 1", "As de snow began to faww and de tempewatuwe dwopped, we knew it was a stowm wike no oda. As de months went on, de snow wingewed and de cowd gwew hawsha. Dewe was no escaping de <b>WIWDFWOST</b>, as it spwead wike a wiwdfiwe of snow and ice.");
            Journal.SetString("journal wildfrost part 2", "Many bewieved de stowm had an unnatuwaw souwce. Bwave adventuwews set out into de wiwdewness, detewmined to put an end to de stowm...");
            Journal.SetString("journal wildfrost part 3", "I, too, decided to take on de chawwenge. But wike those who came befowe me, I was unabwe to penetwate de heawt of de stowm...");
            Journal.SetString("journal wildfrost part 4", "If anyone is weading dis, use de knowwedge wifin dese pages to go fowth and bwing de sun back to ouw wowwd. Togeda, we can westowe wawmth and wight to dis fwozen wand.");
            Journal.SetString("journal sun title", "DE SUN");
            Journal.SetString("journal sun part 1", "Many yeaws ago, befowe de etewnaw winta, dewe was a mighty spiwit in de sky known as de <b>SUN</b>.");
            Journal.SetString("journal sun part 2", "De Sun was de essence of aww wife, its wadiant wight pwoviding wawmth and nouwishment to aww wiving things.");
            Journal.SetString("journal sun part 3", "De gowden wight did not wast foweva...\nA tewwibwe stowm descended upon de wand, enguwfing de Sun and weaving a wifewess cube of ice in de sky. Now, aww dat wemains is a faint, empty wight dat offews no wawmth ow comfowt.");
            Journal.SetString("journal shades part 1", "<b><#825A43>Befowe de Wiwdfwost</color></b><line-height=0.9>\n</line-height>Shades wewe ewusive shadow cweatuwes known fow deiw abiwity to possess objects. Dese wawewy seen beings couwd occasionawwy be found in dawk, cowd pwaces wike shewws and pots.");
            Journal.SetString("journal shades part 2", "<b><#643D34>Afta de Wiwdfwost</color></b><line-height=0.9>\n</line-height>As de wowwd gwew cowda and dawka, Shades became mowe pwevawent and powewfuw. Dey began to possess dangewous objects and animate dem into monstwous opponents.");
            Journal.SetString("journal shades part 3", "A twibe known as de <b><#643D34>Shademancews</color></b> found a way to hawness de powa of dese cweatuwes. Using uniquewy cwafted masks, dey wewe abwe to tuwn dem into wewiabwe awwies!");
            Journal.SetString("journal gnomes part 1", "<b><#825A43>Befowe de Wiwdfwost</color></b>\nGnomes wewe a peacefuw wace who spent deiw days tinkewing wif Cwunkews, and cwafting magnificent machines.");
            Journal.SetString("journal gnomes part 2", "<b><#643D34>Afta de Wiwdfwost</color></b>\nDe wemaining Gnomes banded togeda and devewoped new Cwunkews to hewp dem navigate de cowd, hawsh enviwonment.");
            Journal.SetString("journal gnomes part 3", "Deiw once-thwiving town of <b><#245356>Gnomewodge</color></b> was wost duwing de stowm, but de Gnomes pewsevewed. Eventuawwy, dey found deiw way to Snowdweww and joined de wanks in de fight against de Wiwdfwost...");
            Journal.SetString("journal luminice title", "Wuminice");
            Journal.SetString("journal luminice note 1", "steaming pwessuwe");
            Journal.SetString("journal luminice note 2", "cowd wind");
            Journal.SetString("journal luminice note 3", "Wuminice cowe!");
            Journal.SetString("journal luminice note 4", "Twavew backpack infused wif Wuminice. Can contain mowe than meets de eye!");
            Journal.SetString("journal frost guardian title", "De Empewow Shade");
            Journal.SetString("journal frost guardian 1", "As we appwoached de eye of de stowm, snawws and woaws echoing thwough de icy winds, we encountewed dis odewwowwdwy shade...");
            Journal.SetString("journal frost guardian 2", "Haunted cweatuwes cwowded awound it as if dey wewe unda its thwaww...");
            Journal.SetString("journal frost guardian 3", "Dis shade... it can possess not onwy inanimate objects, but actuaw wiving beings! <#D87B66>Fighting it is hopewess...");
            Journal.SetString("journal frost guardian 4", "I must go back and wawn de odews...");
            Journal.SetString("journal frost guardian 5", "DO NOT APPWOACH IT BY ANY MEANS!");
            Modifiers.SetString("Aimless Items", "Fog Beww");
            Modifiers.SetString("Aimless Items Desc", "Yuw stawting items awe aww <keyword=aimless>");
            Modifiers.SetString("Block For Minibosses", "Fwozen Heawt Beww");
            Modifiers.SetString("Block For Minibosses Desc", "Meaniebosses have wess <keyword=health>, but stawt wif some <keyword=block>");
            Modifiers.SetString("Random Companion", "Hewping Hand");
            Modifiers.SetString("Random Companion Desc", "Stawt wif a wandom fwen instead of a pet");
            Modifiers.SetString("No Companion Limit", "Pawty Beww");
            Modifiers.SetString("No Companion Limit Desc", "No mowe Fwen wimit!");
            Modifiers.SetString("Increase Hand Size", "Swight of Hand");
            Modifiers.SetString("Increase Hand Size Desc", "Hand size incweased by <1>");
            Modifiers.SetString("Boost Leader Stats", "Boosted Weada");
            Modifiers.SetString("Boost Leader Stats Desc", "Yuw weada has betta stats");
            Modifiers.SetString("Random Items", "Pawting Gift");
            Modifiers.SetString("Random Items Desc", "Stawt wif some wandom items");
            Modifiers.SetString("Increase Redraw Bell", "Bwoken Beww");
            Modifiers.SetString("Increase Redraw Bell Desc", "<Redraw Bell> counta incweased by <2>");
            Modifiers.SetString("Permadeath", "Beww of Death");
            Modifiers.SetString("Permadeath Desc", "Fwens die foweva when dey die in battwe");
            Modifiers.SetString("Expensive Shops", "Bwingsnaiw Beww");
            Modifiers.SetString("Expensive Shops Desc", "Some items in shops awe mowe expensive");
            Modifiers.SetString("Drain Leader After Battle", "Bwood Beww");
            Modifiers.SetString("Drain Leader After Battle Desc", "Yuw Weada woses <1><keyword=health> afta each battwe");
            Modifiers.SetString("Bombskull Clunkers", "Bombskuww Beww");
            Modifiers.SetString("Bombskull Clunkers Desc", "Aww fwiendwy and meanie <Clunkers> have <Bombskull Charms>");
            Modifiers.SetString("Double Gobling Blings", "Bwingsack Beww");
            Modifiers.SetString("Double Gobling Blings Desc", "<Goblings> dwop doubwe <keyword=blings> but deiw <keyword=counter> is weduced by <1>");
            Modifiers.SetString("Double Combo Blings", "Gowd Bwade Beww");
            Modifiers.SetString("Double Combo Blings Desc", "<Combos> give doubwe <keyword=blings> but meanies no wonga dwop <keyword=blings> when kiwwed");
            Modifiers.SetString("Boost All Effects", "Wumin Beww");
            Modifiers.SetString("Boost All Effects Desc", "Aww effects on aww cawds awe boosted by <1>");
            Modifiers.SetString("Increase All Health And Damage", "Heawt Beww");
            Modifiers.SetString("Increase All Health And Damage Desc", "Aww fwens and meanies have <+2><keyword=health>");
            Modifiers.SetString("Blessing of Hands", "Sun Beww of Hands");
            Modifiers.SetString("Blessing of Hands Desc", "Cawd Dwaw <+1>");
            Modifiers.SetString("Blessing of Friendship", "Sun Beww of Fewwowship");
            Modifiers.SetString("Blessing of Friendship Desc", "Fwen Wimit and Chawm Wimit <+1>");
            Modifiers.SetString("Blessing of the Bell", "Sun Beww of de Beww");
            Modifiers.SetString("Blessing of the Bell Desc", "Wedwaw Beww Counta <-1>");
            Modifiers.SetString("Harder Enemies", "Dwead Beww");
            Modifiers.SetString("Harder Enemies Desc", "Some meanies wiww be upgwaded wif Chawms and wiww dwop mowe <keyword=blings>");
            Modifiers.SetString("Harder Minibosses", "Howde Beww");
            Modifiers.SetString("Harder Minibosses Desc", "Weduced meanie wave counta, but yu stawt wif a Cwown");
            Modifiers.SetString("Sunbringer", "Titan Beww");
            Modifiers.SetString("Sunbringer Desc", "Hawda Big Meanie battwes, but item wewawds wiww contain mowe options");
            Modifiers.SetString("Charm Bell", "Chawm Beww");
            Modifiers.SetString("Charm Bell Desc", "Some cawd wewawds stawt wif chawms attached");
            Modifiers.SetString("Demon Bell", "Goat Beww");
            Modifiers.SetString("Demon Bell Desc", "Yuw weada stawts wif <1><keyword=demonize>");
            Modifiers.SetString("Boost Enemy Bell", "Battwe Beww");
            Modifiers.SetString("Boost Enemy Bell Desc", "Meanies have <+1><keyword=attack> and <+1><keyword=health>");
            Modifiers.SetString("Frenzy Bosses Bell", "Fwenzy Beww");
            Modifiers.SetString("Frenzy Bosses Bell Desc", "Big Meaniees & Meaniebosses gain <x1><keyword=frenzy>");
            Modifiers.SetString("Blessing of Health", "Sun Beww of Heawth");
            Modifiers.SetString("Blessing of Health Desc", "Weada <keyword=health> <+6>");
            Modifiers.SetString("Blessing of Time", "Sun Beww of Time");
            Modifiers.SetString("Blessing of Time Desc", "Wave Beww Counta <+1>");
            Modifiers.SetString("Blessing of Crown", "Sun Beww of Kings");
            Modifiers.SetString("Blessing of Crown Desc", "Gain a <sprite name=crown>");
            Modifiers.SetString("Blessing of Recall", "Sun Beww of Wecaww");
            Modifiers.SetString("Blessing of Recall Desc", "<Recalling> a <Fren> wiww count down de <Redraw Bell> by <2>");
            Modifiers.SetString("Blessing of Redraw", "Sun Beww of Chawge");
            Modifiers.SetString("Blessing of Redraw Desc", "Stawt each Battwe wif de <Redraw Bell> fuwwy <Charged>");
            Modifiers.SetString("Harder Enemies Desc 2", "Some meanies wiww be upgwaded wif <Charms>");
            Modifiers.SetString("Harder Minibosses Desc 2", "Weduced <Meanie Wave Bell> counta");
            Modifiers.SetString("Sunbringer Desc 2", "Mowe meanies in Big Meanie Battwes");
            Modifiers.SetString("Companion Injuries", "Beww of Death");
            Modifiers.SetString("Companion Injuries Desc", "Fwens tempowawiwy become <Injured> when dey die in Battwes");
            Modifiers.SetString("Frostlands Increase Attack", "Fwostbouwne Beww");
            Modifiers.SetString("Frostlands Increase Attack Desc", "Some meanies in de <Frostlands> wiww be upgwaded wif <Sun Charms>");
            Modifiers.SetString("Deadweight", "Gunk Beww");
            Modifiers.SetString("Deadweight Desc", "Gain a <Gunk Fruit> afta each Big Meanie Battwe");
            Modifiers.SetString("Cards With Bad Charms", "Gwoom Beww");
            Modifiers.SetString("Cards With Bad Charms Desc", "Some cawd wewawds wiww have <Cursed Charms>");
            Modifiers.SetString("Bosses More Health", "Dawkheawt Beww");
            Modifiers.SetString("Bosses More Health Desc", "Big Meaniees and Meaniebosses have incweased <keyword=health>");
            Modifiers.SetString("Ice Caves Increase Attack", "Icebouwne Beww");
            Modifiers.SetString("Ice Caves Increase Attack Desc", "Some meanies in de <Ice Caves> wiww be upgwaded wif <Battle Charms>");
            Modifiers.SetString("Bosses Have Charms", "Titan Beww");
            Modifiers.SetString("Bosses Have Charms Desc", "Big Meaniees and Meaniebosses wiww be upgwaded wif <Charms>");
            Modifiers.SetString("Reduce Boss Wave Counter", "Fwosthand Beww");
            Modifiers.SetString("Reduce Boss Wave Counter Desc", "Some meanies in Big Meanie Battwes wiww be upgwaded wif <Frosthand Charms>");
            Modifiers.SetString("Negative Charms After Bosses", "Jinx Beww");
            Modifiers.SetString("Negative Charms After Bosses Desc", "Afta each Big Meanie, yu must take a <Cursed Charm>");
            Modifiers.SetString("Add Enemy To Boss Battles", "Gobbwa Beww");
            Modifiers.SetString("Add Enemy To Boss Battles Desc", "Add a <Gobbler> to each Big Meanie Battwe");
            Modifiers.SetString("Increase Shop Prices", "Bwingsnaiw Beww");
            Modifiers.SetString("Increase Shop Prices Desc", "Aww shop pwices awe incweased by <5> and <Crown> pwices incwease by <10> afta each puwchase");
            Modifiers.SetString("Frostlands Increase Attack Desc 2", "Meanies in de <Frostlands> have <+1><keyword=attack>");
            Modifiers.SetString("Blessing of Noomlin", "Noomwin Sun Beww");
            Modifiers.SetString("Blessing of Noomlin Desc", "Add <keyword=noomlin> to <2> wandom cawds in yuw deck");
            Modifiers.SetString("Cursed Crowns", "Tywant Beww");
            Modifiers.SetString("Cursed Crowns Desc", "Some <Crowns> wiww be <Cursed>");
            Modifiers.SetString("Blessing of Duplication", "Sun Beww of de Scuwptow");
            Modifiers.SetString("Blessing of Duplication Desc", "Dupwicate aww <Items> in yuw deck");
            Modifiers.SetString("Blessing of Consume", "Bweakfast Sun Beww");
            Modifiers.SetString("Blessing of Consume Desc", "De fiwst <Consume> cawd pwayed each <Battle> is not consumed");
            Modifiers.SetString("Blessing of Draw", "Infinity Sun Beww");
            Modifiers.SetString("Blessing of Draw Desc", "Dwaw a cawd each tuwn whiwe de <Redraw Bell> is <Charged>");
            Modifiers.SetString("Blessing of Deathhand", "Sun Beww of Death");
            Modifiers.SetString("Blessing of Deathhand Desc", "Dwaw a cawd each time an meanie is kiwwed");
            Modifiers.SetString("Blessing of Attack", "Sun Beww of Stwength");
            Modifiers.SetString("Blessing of Attack Desc", "Add <+2><keyword=attack> to aww ewigibwe <Items> in yuw deck");
            Modifiers.SetString("Blessing of Broken Bell", "Bwoken Sun Beww");
            Modifiers.SetString("Blessing of Broken Bell Desc", "Cawd Dwaw <+3>\nDe <Redraw Bell> can onwy be hit when <Charged>");
            Modifiers.SetString("Blessing of Smackback", "Sun Beww of Smackback");
            Modifiers.SetString("Blessing of Smackback Desc", "De fiwst ewigibwe awwy depwoyed each Battwe gains <keyword=smackback>");
            Modifiers.SetString("Drain Leader After Battle Desc 2", "Yuw <Leader> woses hawf <keyword=health> befowe entewing de <Frostlands>");
            Modifiers.SetString("Fog Bell Desc", "Some meanies wiww have <Ooba Charms>");
            Modifiers.SetString("Frozen Heart Bell Desc", "Some cawd wewawds wiww have <Block Charms>");
            Modifiers.SetString("Broken Bell Desc", "Dwaw <3> additionaw cawds if yu hit de <Redraw Bell> when it is not chawged");
            Modifiers.SetString("Bombskull Bell Desc", "Aww fwiendwy <Clunkers> have <Bombskull Charms>");
            Modifiers.SetString("Blingsack Bell Desc", "<Goblings> dwop doubwe <keyword=blings>");
            Modifiers.SetString("Gold Blade Bell Desc", "<Combos> give doubwe <keyword=blings>");
            Modifiers.SetString("Heart Bell Desc", "Aww fwens have <+2><keyword=health>");
            Modifiers.SetString("Goat Bell Desc", "Some meanies wiww have <Demon Eye Charms>");
            Modifiers.SetString("Battle Bell Desc", "Aww fwens have <+1><keyword=attack>");
            Modifiers.SetString("Frenzy Bell Desc", "Yuw stawting items gain <x1><keyword=frenzy>");
            Modifiers.SetString("Fury Bosses", "Fuwy Beww");
            Modifiers.SetString("Fury Bosses Desc", "Big Meaniees gain <keyword=fury 2>");
            Modifiers.SetString("Blessing of Zoomlin", "Zoomwin Sun Beww");
            Modifiers.SetString("Blessing of Zoomlin Desc", "Each time yu dwaw a new hand, add <keyword=zoomlin> to a wandom cawd");
            Modifiers.SetString("Drain Leader After Battle Desc 3", "Yuw highest <keyword=health> cawd woses <2><keyword=health> afta each Big Meanie Battwe");
            Speech.SetString("Shopkeeper Greet 1", "Wewcome!");
            Speech.SetString("Shopkeeper Greet 2", "What can I get fow yu?");
            Speech.SetString("Shopkeeper Greet 3", "Take yuw time to wook awound!");
            Speech.SetString("Shopkeeper Greet 4", "Anything yu wike de wook of?");
            Speech.SetString("Shopkeeper Thanks 1 ", "Gweat choice!");
            Speech.SetString("Shopkeeper Thanks 2", "Thank yu!");
            Speech.SetString("Shopkeeper No 1", "Yu can't affowd dat!");
            Speech.SetString("Shopkeeper Secret 1", "Ok fine, yu can take it fow <{0}>");
            Speech.SetString("Shopkeeper Secret 2", "Awwight den, I'ww take <{0}> fow it!");
            Speech.SetString("Muncher Greet 1", "Hewwo!");
            Speech.SetString("Muncher Greet 2", "Hi dewe!");
            Speech.SetString("Muncher Greet 3", "Huwwo");
            Speech.SetString("Muncher Explain 1", "<#7569CF Monchi> wikes to eat evewything, yu can feed him any items yu don't need!");
            Speech.SetString("Muncher Explain 2", "Yu can feed <#7569CF Monchi> any items yu don't need!");
            Speech.SetString("Muncher Thanks 1", "Thank yu!");
            Speech.SetString("Muncher Full 1", "Thanks! He's fuww now");
            Speech.SetString("Muncher Full 2", "Thanks! Dat's enough fow now");
            Speech.SetString("Petkeeper Greet 2", "Wewcome to de Pet Hut!");
            Speech.SetString("Petkeeper New Pet 1", "<{0}> is weady to go!");
            Speech.SetString("Petkeeper New Pet 2", "Dewe's a new pet avaiwabwe!");
            Speech.SetString("Inventor Greet 1", "Ay dewe!");
            Speech.SetString("Inventor Greet 2", "Wewcome to de wowkshop!");
            Speech.SetString("Inventor New Item 1", "Behowd, my watest invention!");
            Speech.SetString("Inventor New Item 2", "Intwoducing... de <{0}>!");
            Speech.SetString("Inventor New Item 3", "Euweka!");
            Speech.SetString("Shopkeeper Greet Vase 1", "Maybe yu can find some use fow dis bwoken vase?");
            Speech.SetString("Shopkeeper Greet Vase 2", "I have dis beautifuw, awbeit swightwy bwoken, vase up fow sawe.");
            Speech.SetString("Shopkeeper Vase Price 1", "I can wet it go fow a good pwice!");
            Speech.SetString("Shopkeeper Vase Price 2", "Take a cwosa wook, if yu wike!");
            Speech.SetString("Hotspring Greet 1", "Wewcome, pwease enjoy yuw visit!");
            Speech.SetString("Hotspring New Companion 1", "Ah, a new visitow!|Must've heawd about ouw speciaw hot spwings");
            Speech.SetString("Icebreaker Greet 1", "Wewcome ta me cabin!");
            Speech.SetString("Icebreaker New Event 1", "Bwoke dis one fwom de ice!|Pewhaps ye'ww meet 'em next time yu head out!");
            Speech.SetString("Gnomeshop Greet 1", "Hey dewe! Hewp yuwsewf to some of my wawes!|Finest quawity in aww de wand!");
            Speech.SetString("Gnomeshop Take 1", "Gwab some mowe, It's compwetewy fwee!");
            Speech.SetString("Charmshop Greet 1", "Hewwo, adventuwa!|I have some wawe chawms fow sawe. Pwease take a wook!");
            Speech.SetString("Charmshop Thanks 1", "Much obwiged! ");
            Speech.SetString("Charmshop No 1", "Yu don't have de wequiwed bwings fow dat...");
            Speech.SetString("Shade Sculptor Greet 1", "mhmmm...");
            Speech.SetString("Shade Sculptor Copy 1", "hmmm...");
            Speech.SetString("Hotspring Greet 2", "Take some time to wecova in ouw hot spwings!");
            Speech.SetString("Hotspring Greet 3", "<Snowdwell's> hot spwings awe de best pwace to west afta a wong jouwney");
            Speech.SetString("Hotspring New Companion 2", "Wooks wike de spwings awe attwacting new visitows!");
            Speech.SetString("Hotspring New Companion 3", "De mowe de mewwia!");
            Speech.SetString("Icebreaker Greet 2", "Gweetings, me heawty fwiend! ");
            Speech.SetString("Icebreaker Greet 3", "Time ta bweak some ice, ye say?");
            Speech.SetString("Icebreaker New Event 2", "Anoda job weww done!|Absowutewy smashed it dis time!");
            Speech.SetString("Icebreaker New Event 3", "AAHA!|De sound of shattewin' ice sets me heawt a-pumpin'!");
            Speech.SetString("Gnomeshop Greet 2", "Howdy!|Take a ganda at my wawes, evewything is totawwy FWEE!");
            Speech.SetString("Gnomeshop Take 2", "Feew fwee to take anoda one!");
            Speech.SetString("Gnomeshop Take 3", "Ah, <{0}>!|Twuwy a mawvewous choice!");
            Speech.SetString("Gnomeshop Take 4 ", "Did yu see anything?|I didn't see anything");
            Speech.SetString("Gnomeshop Take 5", "Pweasuwe doing business wif yu!");
            Speech.SetString("Charmshop Greet 2", "Gweetings, twavewwa!|Take a wook at my enchanting cowwection of chawms!");
            Speech.SetString("Charmshop Thanks 2", "Yuw kindness is appweciated");
            Speech.SetString("Charmshop No 2", "I'm afwaid dis won't be enough... ");
            Speech.SetString("Shade Sculptor Copy 2", "...");
            Speech.SetString("Lil' Gazi Greet 1", ":3");
            Speech.SetString("Lil' Gazi Greet 2", ":)");
            Speech.SetString("Petkeeper First Greet 1", "Hey! <Zoe> hewe, expewienced pet twaina!|I'ww be twaining up wittwe buddies to accompany yu on yuw jouwneys!");
            Speech.SetString("Inventor Greet 3", "Wewcome to my wowkshop, dis is whewe i'm\nBuiwdin' up my new inventions");
            Speech.SetString("Hotspring First Greet 1", "I'm <Erena>, wewcome to de hot spwings!|Peopwe come fwom aww ova de wand to enjoy de soothing effects of ouw wawm wata");
            Speech.SetString("Petkeeper Greet 1", "Hey dewe!");
            Speech.SetString("Inventor First Greet 1", "Ay dewe, my name's <Plyus>!|I'ww be cwaftin' up new items dat yu'ww find in yuw futuwe twavews!");
            Speech.SetString("Icebreaker First Greet 1", "Weww met, me fwiend!|Name's <Rufeus> and my job is to fwee fowks who's got stuck in de ice!|Pewhaps ye'ww cwoss paths wif 'em next time ye ventuwe out!");
            Speech.SetString("Shade Sculptor Greet 2", "...");
            Stats.SetString("stats_battles_won", "Battwes Won: {0}");
            Stats.SetString("stats_time_taken", "Time Pwayed: {0}");
            Stats.SetString("stats_turns_taken", "Tuwns Taken: {0}");
            Stats.SetString("stats_gold_gained", "Bwings Gained: {0}");
            Stats.SetString("stats_gold_from_goblings", "Bwings Fwom Gobwings: {0}");
            Stats.SetString("stats_gold_from_combos", "Bwings Fwom Combos: {0}");
            Stats.SetString("stats_gold_spent", "Bwings Spent: {0}");
            Stats.SetString("stats_discounts_bought", "Discounts Bought: {0}");
            Stats.SetString("stats_charms_bought", "Chawms Gained: {0}");
            Stats.SetString("stats_crowns_bought", "Cwowns Gained: {0}");
            Stats.SetString("stats_injuries", "Injuwies: {0}");
            Stats.SetString("stats_damage_taken", "Damage Taken: {0}");
            Stats.SetString("stats_damage_blocked", "Damage Bwocked: {0}");
            Stats.SetString("stats_damage_dealt", "Damage Deawt: {0}");
            Stats.SetString("stats_health_healed", "Amount Heawed: {0}");
            Stats.SetString("stats_friendly_damage", "Fwiendwy Damage: {0}");
            Stats.SetString("stats_block_applied", "Bwock Appwied: {0}");
            Stats.SetString("stats_demonize_applied", "Demonize Appwied: {0}");
            Stats.SetString("stats_frost_applied", "Fwost Appwied: {0}");
            Stats.SetString("stats_overload_applied", "Ovewbuwn Appwied: {0}");
            Stats.SetString("stats_scrap_applied", "Scwap Added: {0}");
            Stats.SetString("stats_shell_applied", "Sheww Appwied: {0}");
            Stats.SetString("stats_shroom_applied", "Shwoom Appwied: {0}");
            Stats.SetString("stats_snow_applied", "Snow Appwied: {0}");
            Stats.SetString("stats_spice_applied", "Spice Appwied: {0}");
            Stats.SetString("stats_teeth_applied", "Teeth Appwied: {0}");
            Stats.SetString("stats_enemies_killed", "Meanies Kiwwed: {0}");
            Stats.SetString("stats_allies_killed", "Fwiendwy Kiwws: {0}");
            Stats.SetString("stats_bosses_killed", "Big Meaniees Defeated: {0}");
            Stats.SetString("stats_shroom_kills", "Shwoom Kiwws: {0}");
            Stats.SetString("stats_overload_kills", "Ovewbuwn Kiwws: {0}");
            Stats.SetString("stats_teeth_kills", "Teeth Kiwws: {0}");
            Stats.SetString("stats_smackback_kills", "Smackback Kiwws: {0}");
            Stats.SetString("stats_highest_damage_hit", "Highest Damage Hit: {0}");
            Stats.SetString("stats_highest_kill_combo", "Highest Kiww Combo: {0}");
            Stats.SetString("stats_highest_frenzy", "Highest Fwenzy Weached: {0}");
            Stats.SetString("stats_highest_spice", "Highest Spice Weached: {0}");
            Stats.SetString("stats_highest_gold_from_battle", "Highest Bwings Gained Fwom a Battwe: {0}");
            Stats.SetString("stats_naked_gnomes_saved", "Naked Gnomes Spawed: {0}");
            Stats.SetString("stats_cards_munched", "Cawds Munched: {0}");
            Stats.SetString("stats_charms_assigned", "Chawms Attached: {0}");
            Stats.SetString("stats_companions_recalled", "Fwens Wecawwed: {0}");
            Stats.SetString("stats_redraw_bell_hit", "Wedwaw Beww Wings: {0}");
            Stats.SetString("stats_cards_summoned", "Totaw Summons: {0}");
            Stats.SetString("stats_gobling_hits", "Gobwing Hits: {0}");
            Stats.SetString("stats_goblings_escaped", "Gobwings Escaped: {0}");
            Stats.SetString("stats_cards_renamed", "Cawds Wenamed: {0}");
            Stats.SetString("stats_best_card_rename", "Best Wename: {0}");
            Stats.SetString("stats_smackbacks", "Totaw Smackbacks: {0}");
            Stats.SetString("stats_overall", "Ovewaww Statistics");
            Stats.SetString("stats_wins", "Victowies: {0}");
            Stats.SetString("stats_losses", "Wosses: {0}");
            Stats.SetString("stats_true_wins", "Vanquishes: {0}");
            Stats.SetString("stats_win_rate", "Win Wate: {0}");
            Stats.SetString("stats_best_win_time", "Best Win Time: {0}");
            Stats.SetString("stats_best_win_streak", "Best Win Stweak: {0}");
            Stats.SetString("stats_bom_applied", "Bom Appwied: {0}");
            Stats.SetString("stats_ink_applied", "Ink Appwied: {0}");
            Stats.SetString("stats_haze_applied", "Haze Appwied: {0}");
            Stats.SetString("stats_naked_gnomes_killed", "Naked Gnomes Kiwwed: {0}");
            Tooltips.SetString("tooltip_aimless", "Aimwess");
            Tooltips.SetString("tooltip_aimless_desc", "Hits a wandom tawget in de wow");
            Tooltips.SetString("tooltip_attack", "Attack");
            Tooltips.SetString("tooltip_backline", "Backwine");
            Tooltips.SetString("tooltip_backline_desc", "Depwoys to de back of de wow");
            Tooltips.SetString("tooltip_barrage", "Bawwage");
            Tooltips.SetString("tooltip_barrage_desc", "Hits aww tawgets in de wow");
            Tooltips.SetString("tooltip_blings", "Bwings");
            Tooltips.SetString("tooltip_blings_desc", "Cuwwency used to buy things");
            Tooltips.SetString("tooltip_block", "Bwock");
            Tooltips.SetString("tooltip_block_desc", "Bwocks entiwe instances of owie");
            Tooltips.SetString("tooltip_bombard", "Bombawd");
            Tooltips.SetString("tooltip_bombard_desc", "Hits aww tawgets in <sprite=target> aweas");
            Tooltips.SetString("tooltip_consume", "Consume");
            Tooltips.SetString("tooltip_consume_desc", "Can onwy be used once pew battwe");
            Tooltips.SetString("tooltip_counter", "Counta");
            Tooltips.SetString("tooltip_crown", "Cwown");
            Tooltips.SetString("tooltip_demonize", "Demonize");
            Tooltips.SetString("tooltip_demonize_desc", "Doubwes owie taken|Counts down afta taking owie");
            Tooltips.SetString("tooltip_draw", "Dwaw");
            Tooltips.SetString("tooltip_draw_desc", "Dwaw cawds in to yuw hand");
            Tooltips.SetString("tooltip_frenzy", "Fwenzy");
            Tooltips.SetString("tooltip_frenzy_desc", "Twigga muwtipwe times");
            Tooltips.SetString("tooltip_frontline", "Fwontwine");
            Tooltips.SetString("tooltip_frontline_desc", "Depwoys to de fwont of de wow");
            Tooltips.SetString("tooltip_frost", "Fwost");
            Tooltips.SetString("tooltip_frost_desc", "Tempowawiwy weduces attack|Cweaws afta twiggewing");
            Tooltips.SetString("tooltip_fury", "Fuwy");
            Tooltips.SetString("tooltip_fury_desc", "Deaw additionaw owie whiwe awone in a wow");
            Tooltips.SetString("tooltip_health", "Heawth");
            Tooltips.SetString("tooltip_hellbent", "Hewwbent");
            Tooltips.SetString("tooltip_hellbent_desc", "Cannot be injuwed");
            Tooltips.SetString("tooltip_immune_snow", "Wesist Snow");
            Tooltips.SetString("tooltip_boop", "Boop");
            Tooltips.SetString("tooltip_boop_desc", "Knock back tawget");
            Tooltips.SetString("tooltip_longshot", "Wongshot");
            Tooltips.SetString("tooltip_longshot_desc", "Hit de fuwdest tawget in de wow");
            Tooltips.SetString("tooltip_lumin", "Wumin");
            Tooltips.SetString("tooltip_lumin_desc", "Doubwes tawget's effects|Cweaws when Wumin is appwied to anoda cawd");
            Tooltips.SetString("tooltip_noomlin", "Noomwin");
            Tooltips.SetString("tooltip_noomlin_desc", "Does not end yuw tuwn when pwayed");
            Tooltips.SetString("tooltip_overload", "Ovewbuwn");
            Tooltips.SetString("tooltip_overload_desc", "Expwodes when mowe than ow equaw to heawth, damaging aww tawgets in de wow|Cweaws afta activation");
            Tooltips.SetString("tooltip_pull", "Yank");
            Tooltips.SetString("tooltip_pull_desc", "Puww tawget to fwont");
            Tooltips.SetString("tooltip_reaction", "Weaction");
            Tooltips.SetString("tooltip_redraw", "Wedwaw");
            Tooltips.SetString("tooltip_redraw_desc", "Discawd yuw hand and wedwaw");
            Tooltips.SetString("tooltip_redraw_bell", "Wedwaw Beww");
            Tooltips.SetString("tooltip_redraw_bell_desc", "Discawd yuw hand and dwaw <{0}> new cawds");
            Tooltips.SetString("tooltip_scrap", "Scwap");
            Tooltips.SetString("tooltip_scrap_desc", "A diffewent kind of heawth|Weduces by 1 when any owie is taken");
            Tooltips.SetString("tooltip_shell", "Sheww");
            Tooltips.SetString("tooltip_shell_desc", "Bwocks owie");
            Tooltips.SetString("tooltip_shroom", "Shwoom");
            Tooltips.SetString("tooltip_shroom_desc", "Deaws owie evewy tuwn|Counts down evewy tuwn");
            Tooltips.SetString("tooltip_smackback", "Smackback");
            Tooltips.SetString("tooltip_smackback_desc", "Countewattack afta taking a hit");
            Tooltips.SetString("tooltip_snow", "Snow");
            Tooltips.SetString("tooltip_snow_desc", "Fweezes Countews<sprite name=counter> & Weactions<sprite name=reaction>|Counts down evewy tuwn");
            Tooltips.SetString("tooltip_spice", "Spice");
            Tooltips.SetString("tooltip_spice_desc", "Tempowawiwy incweases attack|Cweaws afta twiggewing");
            Tooltips.SetString("tooltip_spikes", "Teeth");
            Tooltips.SetString("tooltip_spikes_desc", "Deaws owie to attackews");
            Tooltips.SetString("tooltip_summoned", "Summoned");
            Tooltips.SetString("tooltip_summoned_desc", "Woses heawth afta twiggewing & cannot be wecawwed");
            Tooltips.SetString("tooltip_unmovable", "Unmovabwe");
            Tooltips.SetString("tooltip_unmovable_desc", "Cannot be moved");
            Tooltips.SetString("tooltip_wild", "Wiwd");
            Tooltips.SetString("tooltip_wild_desc", "Gain <x1><keyword=frenzy> when oda <Wild> cawds awe kiwwed");
            Tooltips.SetString("tooltip_ink", "Ink");
            Tooltips.SetString("tooltip_ink_desc", "Awso hit sewf when attacking|Counts down afta activation");
            Tooltips.SetString("tooltip_vim", "Bom");
            Tooltips.SetString("tooltip_vim_desc", "Negate next attack & deaw owie back to de attacka|Cweaws afta activation");
            Tooltips.SetString("tooltip_null", "Ink");
            Tooltips.SetString("tooltip_null_desc", "Siwences effects|Counts down evewy tuwn");
            Tooltips.SetString("tooltip_sacrificed", "Sacwificed");
            Tooltips.SetString("tooltip_sacrificed_desc", "Kiwwed by team");
            Tooltips.SetString("tooltip_hogheaded", "Hogheaded");
            Tooltips.SetString("tooltip_hogheaded_desc", "Cannot be wecawwed");
            Tooltips.SetString("tooltip_combo", "Cwiticaw");
            Tooltips.SetString("tooltip_combo_desc", "Doubwe effects if dis is de wightmost cawd in yuw hand");
            Tooltips.SetString("tooltip_immune_snow_desc", "Can onwy have a maximum of 1<sprite name=snow>");
            Tooltips.SetString("tooltip_soulbound", "Souwbound");
            Tooltips.SetString("tooltip_soulbound_desc", "Take <100> owie when oda <Soulbound> cawds awe <keyword=sacrificed>");
            Tooltips.SetString("tooltip_split", "Spwit");
            Tooltips.SetString("tooltip_split_desc", "Bweak in to 2 cawds wif hawf <keyword=health> and status effects");
            Tooltips.SetString("tooltip_crown_desc", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe");
            Tooltips.SetString("tooltip_charm_machine", "Chawm Machine");
            Tooltips.SetString("tooltip_charm_machine_desc", "Yu can use Chawms to upgwade yuw cawds!");
            Tooltips.SetString("tooltip_crush", "Cwush");
            Tooltips.SetString("tooltip_crush_desc", "Destwoys a wandom <card=Junk> in yuw hand if possibwe, odewwise destwoys a wandom <Item>");
            Tooltips.SetString("tooltip_weakness", "Bom");
            Tooltips.SetString("tooltip_weakness_desc", "Take additionaw owie fwom aww souwces|Does not count down!");
            Tooltips.SetString("tooltip_haze", "Haze");
            Tooltips.SetString("tooltip_haze_desc", "When attacking, hit a wandom awwy instead|Counts down afta each attack");
            Tooltips.SetString("tooltip_recycle", "Wecycwe");
            Tooltips.SetString("tooltip_recycle_desc", "Wequiwes <card=Junk> in yuw hand to pway, destwoys de <card=Junk> aftewwawds");
            Tooltips.SetString("tooltip_trash", "Twash");
            Tooltips.SetString("tooltip_trash_desc", "Add <card=Junk> to yuw hand");
            Tooltips.SetString("tooltip_explode", "Expwode");
            Tooltips.SetString("tooltip_explode_desc", "When destwoyed, deaws owie to aww meanies in de wow");
            Tooltips.SetString("tooltip_greed", "Gweed");
            Tooltips.SetString("tooltip_greed_desc", "Deaw <1> additionaw owie fow each <50><keyword=blings> yu have");
            Tooltips.SetString("tooltip_effigy", "Faith");
            Tooltips.SetString("tooltip_effigy_desc", "Incweases summon's <keyword=attack> and <keyword=health>");
            Tooltips.SetString("tooltip_redraw_bell_notcharged", "<Not Charged>\nDis action wiww end yuw tuwn");
            Tooltips.SetString("tooltip_redraw_bell_charged", "<Charged!>\nDis is a fwee action, meaning it wiww not end yuw tuwn");
            Tooltips.SetString("tooltip_hit_desc", "A \"hit\" occuws when one cawd attacks anoda, even if dey don't deaw any owie\n\nAww cawds dat have <keyword=attack> icons wiww attack and \"hit\" deiw tawgets\n\nDamage deawt by status effects does not count as a \"hit\"");
            Tooltips.SetString("tooltip_active_desc", "Units awe considewed \"active\" when dey awe on de battwefiewd");
            Tooltips.SetString("tooltip_injured_desc", "Stawt battwes wif hawf <keyword=health> and <keyword=attack>\n\nInjuwies wemain untiw de cawd suwvives a battwe");
            Tooltips.SetString("tooltip_healed_desc", "\"When heawed\" effects awso occuw when ovewheawed, ow max heawth is incweased");
            Tooltips.SetString("tooltip_injured", "Injuwed");
            Tooltips.SetString("tooltip_counter_trigger_desc", "Dis cawd wiww twigga in <{0}> tuwns\n\nCan be fwozen wif Snow<sprite name=snow>");
            Tooltips.SetString("tooltip_recycle_destroy_desc", "\"Wecycwe\" wiww destwoy de wightmost Junk cawd in yuw hand");
            Tooltips.SetString("tooltip reaction and", " and ");
            Tooltips.SetString("tooltip_counter_frozen_desc", "<Frozen by Snow>\nCannot count down untiw <sprite name=snow> is cweawed");
            Tooltips.SetString("tooltip_reaction_frozen_desc", "<Frozen by Snow>\nCannot twigga untiw <sprite name=snow> is cweawed");
            Tooltips.SetString("tooltip reaction trigger desc", "Dis cawd wiww {0}\n\nCan be fwozen wif Snow<sprite name=snow>");
            Tooltips.SetString("tooltip_counter_trigger_next_desc", "Dis cawd wiww twigga <dis turn>\n\nCan be fwozen wif Snow<sprite name=snow>");
            Tooltips.SetString("tooltip_reaction_silenced_desc", "<Silenced by Ink>\nCannot twigga untiw <sprite name=ink> is cweawed");
            Tooltips.SetString("tooltip_spark", "Spawk");
            Tooltips.SetString("tooltip_spark_desc", "Twigga immediatewy when depwoyed. Cannot be wecawwed");
            Tooltips.SetString("tooltip_wave_bell", "Wave Beww");
            Tooltips.SetString("tooltip_wave_bell_desc", "<{0}> meanies awwiving in <{1}> tuwns");
            Tooltips.SetString("tooltip_wave_bell_hit", "Hit de beww to caww meanies eawwy\n\nDis is a fwee action");
            Tooltips.SetString("tooltip_wave_bell_overflow", "Not enough space! <{0}> meanies wiww ovewfwow to next wave");//\n\nCan't be cawwed eawwy when dewe is not enough space fow aww meanies");
            Tooltips.SetString("tooltip_wave_bell_reward", "Gain <+{0}><sprite name=bling>");
            Tooltips.SetString("tooltip_absorb", "Absowb");
            Tooltips.SetString("tooltip_absorb_desc", "Take <keyword=health>, <keyword=attack>, effects and status effects");
            Tooltips.SetString("tooltip_spikes_desc2", "Deaws owie to attackews|Counts down when hit");
            Tooltips.SetString("tooltip_spark_desc2", "Twigga immediatewy when depwoyed");
            Tooltips.SetString("tooltip_brittle", "Bwittwestaw");
            Tooltips.SetString("tooltip_brittle_desc", "Destwoyed when any amount of <keyword=health> is wost");
            Tooltips.SetString("tooltip_cleanse", "Cweanse");
            Tooltips.SetString("tooltip_cleanse_desc", "Wemove aww negative status effects");
            Tooltips.SetString("tooltip_bootleg", "Bootweg ");
            Tooltips.SetString("tooltip_bootleg_desc", "<keyword=health><keyword=attack><keyword=counter> awe wandomized between <2> and <5>");
            Tooltips.SetString("tooltip_copy_desc", "De \"copy\" wiww wose aww negative status effects and have its <keyword=counter> weset");
            Tooltips.SetString("tooltip_zoomlin", "Zoomwin");
            Tooltips.SetString("tooltip_zoomlin_desc", "Does not end yuw tuwn when pwayed|Cawd woses Zoomwin when pwayed");
            Tooltips.SetString("tooltip_fragile", "Fwagiwe");
            Tooltips.SetString("tooltip_fragile_desc", "Max <keyword=health> can not be incweased duwing battwes");
            Tooltips.SetString("tooltip_heartburn", "Fwouwish");
            Tooltips.SetString("tooltip_heartburn_desc", "When heawed, max <keyword=health> awso incweases");
            Tooltips.SetString("tooltip_obliterate", "Obwitewate");
            Tooltips.SetString("tooltip_obliterate_desc", "Whiwe active, aww <Items> in yuw hand gain <keyword=consume>");
            UIText.SetString("play", "Pway");
            UIText.SetString("continue", "Continue");
            UIText.SetString("town", "Town");
            UIText.SetString("mod", "");
            UIText.SetString("exit", "Exit");
            UIText.SetString("resume", "Wesume");
            UIText.SetString("quick_restart", "Quick Westawt");
            UIText.SetString("back_to_menu", "Back To Menu");
            UIText.SetString("music_volume", "Music");
            UIText.SetString("sfx_volume", "Sounds");
            UIText.SetString("oh_no", "Oh No!");
            UIText.SetString("found_error", "Yu Found an Ewwow!");
            UIText.SetString("error_desc", "An ewwow has occuwed! Yuw game may no wonga function cowwectwy.\nEwwow wogs can be found in yuw Wiwdfwost AppData fowda");
            UIText.SetString("hide_message", "Hide Message");
            UIText.SetString("exit_desktop", "Exit To Desktop");
            UIText.SetString("back_to_town", "Back To Town");
            UIText.SetString("choose_leader", "Choose yuw Weada");
            UIText.SetString("lets_go", "Wet's Go!");
            UIText.SetString("rename", "Wename");
            UIText.SetString("your_deck", "YOUW DECK");
            UIText.SetString("reserve", "WESEWVE");
            UIText.SetString("map_town", "Snowdweww");
            UIText.SetString("map_battle", "Battwe");
            UIText.SetString("map_boss", "Big Meanie!");
            UIText.SetString("map_ice", "Fwozen Twavewwews");
            UIText.SetString("map_bling_cave", "Bwingsnaiw Cave");
            UIText.SetString("map_charm", "Chawm");
            UIText.SetString("map_item", "Tweasuwe");
            UIText.SetString("map_shop", "De Woowwy Snaiw");
            UIText.SetString("map_muncher", "Muncha");
            UIText.SetString("event_item_open", "Open it up!");
            UIText.SetString("event_item_choose", "Pick a new item!");
            UIText.SetString("event_item_skip", "Skip fow +20<sprite name=bling>");
            UIText.SetString("event_charm_open", "Take de chawm!");
            UIText.SetString("charm_got", "Chawm Got!");
            UIText.SetString("crown_got", "Cwown Got!");
            UIText.SetString("charm_equip", "Equip Now");
            UIText.SetString("charm_save", "Save Fow Wata");
            UIText.SetString("event_ice_break", "Bweak de ice!");
            UIText.SetString("event_ice_choose", "Choose a new fwen!");
            UIText.SetString("event_ice_skip", "Ow wawk away...");
            UIText.SetString("event_shop_enter", "Enta Shop");
            UIText.SetString("event_muncher_feed", "Feed De Muncha?");
            UIText.SetString("event_muncher_drag", "Dwag To Feed");
            UIText.SetString("combo", "<line-height=0.35><size=0.7><#{1}>x{0}\n<size=0.35>Combo\n\n<#FFD150>+{2}<sprite name=bling>");
            UIText.SetString("battle_win", "VICTOWY");
            UIText.SetString("battle_continue", "Continue");
            UIText.SetString("continue_q", "Continue?");
            UIText.SetString("giveup", "Give Up");
            UIText.SetString("help_pethut", "De Pet House|Hewe yu wiww unwock pets to stawt each wun wif.\n\nCheck back once in a whiwe to twy out newwy discovewed pets.");
            UIText.SetString("help_inventor", "De Inventow's Hut|Ova time, de inventow wiww cweate new items fow yu!\n\nOnce cweated, yu'ww come acwoss dese items out in de wiwdewness.");
            UIText.SetString("help_icebreakers", "Icebweaka Cabin|Compwete chawwenges hewe to unwock new events dat wiww appeaw on de map duwing wuns.");
            UIText.SetString("help_tribehut", "De Twibe Haww|De fwags of each unwocked Twibe wiww be dispwayed hewe.");
            UIText.SetString("help_leaderselect", "Weada Sewection|At de stawt of each wun, yu must choose a Weada.\n\nEach Weada bewongs to a Twibe which detewmines yuw stawting deck and de cawds yu wiww come acwoss duwing de wun.\n\nKeep yuw Weada awive! If dey die, it's game ova!");
            UIText.SetString("nice", "Nice!");
            UIText.SetString("recovered_from_injuries", "Wecovewed fwom injuwies! <sprite name=health>");
            UIText.SetString("help_daily_run", "Daiwy Voyage|Each day dewe wiww be a new chawwenge avaiwabwe.\n\nYu onwy get one shot. Good wuck!");
            UIText.SetString("daily_run", "Daiwy Voyage");
            UIText.SetString("leaderboards", "Scowes");
            UIText.SetString("building_tribehall", "Twibe Haww");
            UIText.SetString("building_pethut", "Pet House");
            UIText.SetString("building_inventorhut", "Inventow's Hut");
            UIText.SetString("building_icebreakers", "Icebweaka Cabin");
            UIText.SetString("unlock_building_start", "Constwuction Stawted!");
            UIText.SetString("unlock_building_complete", "Constwuction Compweted!");
            UIText.SetString("unlock_pet", "New Pet Twained!");
            UIText.SetString("unlock_item", "New Item Invented!");
            UIText.SetString("unlock_tribe", "New Twibe Avaiwabwe!");
            UIText.SetString("unlock_pethut_desc", "New pets to stawt each jouwney wif can be unwocked in de Pet House");
            UIText.SetString("unlock_inventor_desc", "New items can be unwocked in de Inventow's Hut");
            UIText.SetString("unlock_icebreakers_desc", "Visit de Icebweaka Cabin to find out how to bweak some peopwe out of de ice");
            UIText.SetString("unlock_pet_desc", "Visit de Pet House to discova yuw new pet!");
            UIText.SetString("unlock_item_desc", "Visit de Inventow's Hut to discova yuw new item!");
            UIText.SetString("unlock_tribe_desc", "Visit de Twibe Haww to discova yuw new twibe!");
            UIText.SetString("result_dead", "DEAD");
            UIText.SetString("result_complete", "COMPWETE");
            UIText.SetString("town_progress", "Town Pwogwess");
            UIText.SetString("companion_join1", "Hewwo! I'm <name>. I'ww gwadwy join yuw team!");
            UIText.SetString("companion_join2", "Hewwo dewe! I'm <name>. Weady to go!");
            UIText.SetString("building_pethut_unlock", "New Pet Avaiwabwe!");
            UIText.SetString("building_inventorhut_unlock", "New Invention!");
            UIText.SetString("companion_join_gnome", "Thanks fow spawing me!\nWet me come wif yu!");
            UIText.SetString("battle_injuries", "Injuwies");
            UIText.SetString("exit_save", "Save & Exit");
            UIText.SetString("settings_title", "SETTINGS");
            UIText.SetString("settings_game", "Game Options");
            UIText.SetString("settings_audio", "Audio");
            UIText.SetString("settings_video", "Video");
            UIText.SetString("settings_keyboard_mouse", "Keyboawd & Mouse");
            UIText.SetString("settings_controller", "Contwowwa");
            UIText.SetString("settings_accessibility", "Accessibiwity");
            UIText.SetString("master_volume", "Masta Vowume");
            UIText.SetString("language", "Wanguage");
            UIText.SetString("language_this", "Engwish");
            UIText.SetString("camera_shake", "Camewa Shake");
            UIText.SetString("display_mode", "Dispway Mode");
            UIText.SetString("display_fullscreen", "Fuwwscween");
            UIText.SetString("display_windowed", "Windowed");
            UIText.SetString("display_borderless", "Bowdewwess");
            UIText.SetString("blood", "Bwood");
            UIText.SetString("blood_normal", "Nowmaw");
            UIText.SetString("blood_rainbow", "Wainbow");
            UIText.SetString("blood_amount", "Bwood Amount");
            UIText.SetString("building_hotspring", "Hot Spwing");
            UIText.SetString("building_hotspring_unlock", "New Fwen!");
            UIText.SetString("unlock_companion", "New Fwen!");
            UIText.SetString("help_hotspring", "Hot Spwing|Attwact new twavewwews to Snowdweww by compweting chawwenges.\n\nYu wiww come acwoss dese unwocked Fwens duwing wuns.");
            UIText.SetString("unlock_hotspring_desc", "De Hot Spwing wiww attwact new fwens");
            UIText.SetString("unlock_companion_desc", "Check out de Hot Spwing to meet de fwen!");
            UIText.SetString("intro1", "Fow hundweds of yeaws de wowwd has enduwed <#DE3E43>De Wiwdfwost</color>...|...an unwewenting stowm of snow and ice");
            UIText.SetString("intro2", "De fwozen wiwdewness gwew fiewca each yeaw...|...whiwe suwvivows gadewed in de town of <#039ACE>Snowdweww</color>");
            UIText.SetString("intro3", "When de <#FFFF99>Sun Tempwe</color> succumbed to de fwost...|...de sun in de sky was weft foweva fwozen");
            UIText.SetString("intro4", "Aww hope seemed wost...|...when a wittwe spawk appeawed");
            UIText.SetString("intro5", "A smaww spiwit dat couwd guide us to de wost tempwe...|...and teach us how to beat dis eviw fwost");
            UIText.SetString("intro6", "If we can weach de <#FFFF99>Sun Tempwe</color>, we can bwing back de sun...|...and finawwy end dis etewnaw winta");
            UIText.SetString("tutorial_charm1", "Yu can equip yuw [Chawm] by dwagging it on to a cawd");
            UIText.SetString("tutorial_charm2", "Once equipped, [Chawms] cannot be wemoved!");
            UIText.SetString("tutorial_injury", "[{0}] was injuwed in battwe!\n\nIf dey suwvive de next battwe, dey wiww wecova");
            UIText.SetString("tutorial_injury_multiple", "Some of yuw [Fwens] wewe injuwed in battwe!\n\nIf dey suwvive de next battwe, dey wiww wecova");
            UIText.SetString("tutorial_companion1", "Yu can [<action=Inspect>] any cawd to [Inspect] it|Inspecting cawds wiww pwovide infowmation about deiw effects and statuses");
            UIText.SetString("tutorial_companion1_gamepad", "Pwess [<action=Inspect>] on any cawd to [Inspect] it|Inspecting cawds wiww pwovide infowmation about deiw effects and statuses");
            UIText.SetString("tutorial_companion2", "Sewect a [Fwen] to continue!");
            UIText.SetString("tutorial_item", "[Woodhead] is a [Cwunka Cawd]\n\n[Cwunkews] awe items dat yu can pwace in battwes to aid yuw [Fwens]");
            UIText.SetString("tutorial_battle1_1", "To stawt each battwe, dwag yuw [Weada]<sprite name=crown> fwom yuw [Hand] on to de [Battwefiewd]");
            UIText.SetString("tutorial_battle1_2", "[{0}] is one of yuw [Fwen Cawds]\nGet him on de [Battwefiewd], too!");
            UIText.SetString("tutorial_battle1_3", "Use yuw [Scwappy Swowd] to take out dat [Pengoon]!");
            UIText.SetString("tutorial_battle1_4", "[Cawd Countews] <sprite name=counter> weduce by [1] each tuwn\n\nWhen dey weach zewo, de cawd wiww attack!");
            UIText.SetString("tutorial_battle1_5", "Yu'we awmost out of cawds!\n\nGain a new hand by hitting de [Wedwaw Beww]");
            UIText.SetString("tutorial_battle1_6", "Yu must pwotect yuw [Weada]<sprite name=crown>\n\nIf dey die, it's game ova!");
            UIText.SetString("tutorial_battle1_7", "De [Wave Beww] shows de numba of tuwns untiw de next wave of meanies");
            UIText.SetString("tutorial_battle1_8", "Yu need to defeat [De Snow Knight] to win de battwe!");
            UIText.SetString("tutorial_battle2_1", "Yu can awso [Inspect] cawds duwing battwes\n\n[<action=Inspect>] de [{0}] to inspect it|If yu'we eva confused about a cawd, wememba to inspect it fow fuwda infowmation");
            UIText.SetString("tutorial_battle2_1_gamepad", "Yu can awso [Inspect] cawds duwing battwes\n\nPwess [<action=Inspect>] on de [{0}] to inspect it|If yu'we eva confused about a cawd, wememba to inspect it fow fuwda infowmation");
            UIText.SetString("tutorial_battle2_2", "Pwace [{0}] in de oda wow");
            UIText.SetString("tutorial_battle2_3", "Dwag [{0}] in fwont of yuw [Weada]<sprite name=crown> to pwotect dem fwom de attack!");
            UIText.SetString("tutorial_battle2_4", "Moving yuw cawds does not take a tuwn, so yu can stiww pway a cawd");
            UIText.SetString("tutorial_battle2_5", "Yu can [Wecaww] yuw [Fwens] to heaw dem\n\nDwag [{0}] to yuw [Discawd Pocket]|Yu can neva Wecaww yuw Weada!");
            UIText.SetString("tutorial_battle2_6", "Wecawwing cawds is awso a fwee action!");
            UIText.SetString("key_mouse1", "Weft Cwick");
            UIText.SetString("key_mouse2", "Wight Cwick");
            UIText.SetString("tutorial_unplayable_crown_card", "Yuw [Cwown Cawd] cannot be pwayed!\nHit de [Wedwaw Beww] to continue...");
            UIText.SetString("tutorial_battle1_41", "Meanies awways attack fiwst!");
            UIText.SetString("retry", "Wetwy");
            UIText.SetString("skip", "Skip");
            UIText.SetString("tutorial_retry_or_skip", "Skip Tutowiaw?|Wooks wike yu didn't finish de Tutowiaw!\n\nWouwd yu wike to wetwy, ow skip it?");
            UIText.SetString("recall_heal", "{0}<sprite name=health> Heawed");
            UIText.SetString("companion_limit_hit", "Fwen Wimit Hit!\n<size=.4><#fff>Yu can wesewve fwens in yuw deckpack at any time\n<size=.5><#fff><#{2}>{0}</color>/{1}");
            UIText.SetString("companion_limit_swap", "<#fff>SEWECT CAWDS</color>\nto swap out");
            UIText.SetString("get_outta_here", "Get outta hewe!");
            UIText.SetString("wishlist_steam", "Wishwist On Steam!");
            UIText.SetString("demo_version", "Demo Vewsion");
            UIText.SetString("tutorial_town", "Wewcome to Snowdweww!|Yu can constwuct new buiwdings in de town by compweting chawwenges.\n\nCheck back hewe afta each wun to see what yu've unwocked!");
            UIText.SetString("dtutorial_recall", "<size=0.3>Wememba, yu can heaw yuw [Fwens] by [Wecawwing] dem!");
            UIText.SetString("dtutorial_redraw", "<size=0.3>Don't fowget, yu can hit de [Wedwaw Beww] at any time!");
            UIText.SetString("dtutorial_move", "<size=0.3>Don't fowget, yu can move yuw cawds awound at any time!");
            UIText.SetString("demo_complete", "DEMO COMPWETED");
            UIText.SetString("demo_thanks", "Thank yu fow pwaying! De fuww game wiww featuwe:");
            UIText.SetString("demo_new_areas", "MOWE AWEAS");
            UIText.SetString("demo_new_areas_sub", "wif unique meanies & bosses!");
            UIText.SetString("demo_town", "BUIWD YOUW TOWN");
            UIText.SetString("demo_town_sub", "to unwock new cwasses, cawds & events!");
            UIText.SetString("demo_tribes", "DIFFEWENT CWASSES");
            UIText.SetString("demo_tribes_sub", "each wif distinctive cawds & pwaystywes");
            UIText.SetString("demo_boss", "A MYSTEWIOUS FINAW BOSS");
            UIText.SetString("demo_boss_sub", "dat wiww be diffewent each time yu pway...");
            UIText.SetString("demo_wishlist", "Wishwist Wiwdfwost!");
            UIText.SetString("event_duplicator_choose", "Choose a cawd to dupwicate");
            UIText.SetString("event_duplicator_confirm", "Dupwicate dis cawd?");
            UIText.SetString("event_gnome_take", "Take some items, fwee of chawge!");
            UIText.SetString("building_frostoscope", "Fwostoscope");
            UIText.SetString("unlock_frostoscope_desc", "Use de Fwostoscope to keep an eye on de Fwost Guawdian");
            UIText.SetString("help_frostoscope", "De Fwostoscope|Take a peek at de cuwwent Finaw Big Meanie Battwe dat yu'ww be facing");
            UIText.SetString("map_charm_shop", "Chawm Mewchant");
            UIText.SetString("map_gnome", "Gnome Twavewwa");
            UIText.SetString("map_copy_item", "Shade Scuwptow");
            UIText.SetString("map_final_boss", "Eye of de Stowm");
            UIText.SetString("unlock_event", "New Event Avaiwabwe!");
            UIText.SetString("unlock_event_desc", "Visit de Icebweaka Cabin to find out mowe!");
            UIText.SetString("result_victory1", "VICTOWY?");
            UIText.SetString("result_victory2", "VANQUISHED");
            UIText.SetString("key_tap1", "Tap <sprite=26>");
            UIText.SetString("key_tap2", "2-Finga Tap <sprite=27>");
            UIText.SetString("tutorial_companion1_touch", "[<action=Inspect>] any cawd to [Inspect] it|Inspecting cawds wiww pwovide infowmation about deiw effects and statuses");
            UIText.SetString("help_daily_run_no_connection", "No Connection!|De Daiwy Voyage wequiwes an active intewnet connection.");
            UIText.SetString("score_title", "Yuw Scowe");
            UIText.SetString("score_time", "Time");
            UIText.SetString("score_battles_won", "Battwes Won");
            UIText.SetString("score_blings", "Bwings");
            UIText.SetString("score_total", "Totaw: {0}");
            UIText.SetString("score_uploading", "<#fffa>Submitting Scowe");
            UIText.SetString("score_upload_failed", "<#fffa>Faiwed to Submit Scowe :(");
            UIText.SetString("score_global_rank", "Gwobaw Wank: <#ff0>#{0}");
            UIText.SetString("modifier_unlock_title", "Modifia Beww Unwocked!");
            UIText.SetString("modifier_unlock_body", "Modifiews Bewws pwovide additionaw chawwenge, fow those bwave enough!\n\nYu can enabwe/disabwe Modifia Bewws befowe stawting each wun");
            UIText.SetString("popup_no_target_to_attack", "No Tawget To Attack!");
            UIText.SetString("popup_no_allies_to_heal", "No Awwies To Heaw!");
            UIText.SetString("popup_no_target_for_status", "No Tawgets Fow {0}");
            UIText.SetString("popup_no_space_to_summon", "No Space To Summon!");
            UIText.SetString("popup_no_cards_to_draw", "No Cawds To Dwaw!");
            UIText.SetString("popup_no_allies_to_boost", "No Awwies Can Be Boosted!");
            UIText.SetString("popup_no_enemies_to_boost", "No Meanies Can Be Boosted!");
            UIText.SetString("popup_requires_junk", "Wequiwes {0} Junk!");
            UIText.SetString("journal_history_title", "THIS <#B88F60>JOUWNAW</color> BEWONGS <#D0B38F>TO</color>");
            UIText.SetString("tribe1_name", "Snowdwewwews");
            UIText.SetString("tribe1_desc", "A cowwection of cwans who banded togeda in de town of Snowdweww to wead de battwe against de Wiwdfwost.\n\nMastewing de ewements is key to deiw stwategy in battwe, using snow and shwooms to hinda meanies, shewws to pwotect demsewves, and fwaming hot spice to gain mowe powa.");
            UIText.SetString("tribe2_name", "Shademancews");
            UIText.SetString("tribe2_desc", "Dese skiwwed wawwiows unweash de powa of dawkness by summoning spiwits known as Shades to aid dem in battwe.\n\nShades can absowb meanie attacks, be powewed up to cweate devastating opponents, ow stwategicawwy sacwificed to gain vawious boons.");
            UIText.SetString("tribe3_name", "Cwunkmastews");
            UIText.SetString("tribe3_desc", "De wost twibe of de Gnomes! Dese masta tinkewews use\njunk and scwap to fuew powewfuw Cwunkews and weapons.\n\nStwiking a bawance between cweating and wecycwing junk to powa machinewy and weaponwy is fundamentaw to de Cwunkmasta stwategy.");
            UIText.SetString("new_final_boss", "NEW FWOST GUAWDIAN\n<#FD56FF>ASCENDED");
            UIText.SetString("building_challenge_shrine", "Chawwenge Stones");
            UIText.SetString("unlock_charm", "New Chawm Unwocked!");
            UIText.SetString("unlock_charm_desc", "Visit de Chawwenge Stones to discova yuw new chawm!");
            UIText.SetString("win_streak", "Cuwwent Win Stweak");
            UIText.SetString("cards_combined", "Cawds Combined!");
            UIText.SetString("throw_card", "Thwow {0}!");
            UIText.SetString("choose_reward", "Choose a wewawd!");
            UIText.SetString("credits", "Cwedits");
            UIText.SetString("confirm", "Confiwm");
            UIText.SetString("settings", "Settings");
            UIText.SetString("display_max_fps", "Max FPS");
            UIText.SetString("display_vsync", "Vsync");
            UIText.SetString("on", "On");
            UIText.SetString("off", "Off");
            UIText.SetString("display_fps_unlimited", "Unwimited");
            UIText.SetString("camera_sway", "Camewa Tawget Puww");
            UIText.SetString("screen_flash", "Scween Fwash Effects");
            UIText.SetString("help_redraw_bell", "Wedwaw Beww|Yu can use de Wedwaw Beww at any time to discawd yuw hand and dwaw <#fff>6</color> new cawds.\n\nHitting de Wedwaw Beww wiww end yuw tuwn unwess de beww is <#fff>chawged</color>. It wiww become <#fff>chawged</color> when its counta weaches zewo.");
            UIText.SetString("got it", "Got it!");
            UIText.SetString("map_charm_shop_desc", "Puwchase chawms & upgwaded items fwom dis twavewwing mewchant and hew pet goat");
            UIText.SetString("map_gnome_desc", "A sneaky gnome who wiww give yu some items fow fwee! No stwings attached!\n\nSeems too good to be twue, wight?");
            UIText.SetString("map_copy_item_desc", "Dis mystewious chawacta wiww hewp yu out by scuwpting a copy of one of de items in yuw deck");
            UIText.SetString("map_true_final_boss", "Heawt of de Stowm");
            UIText.SetString("yes", "Yes");
            UIText.SetString("no", "No");
            UIText.SetString("map_now_entering", "Now Entewing...");
            UIText.SetString("map area 1", "SNOW MANS WAND");
            UIText.SetString("map area 2", "DE ICE CAVES");
            UIText.SetString("map area 3", "DE FWOSTWANDS");
            UIText.SetString("help_give_up", "Give Up?|Awe yu suwe yu want to abandon yuw existing wun and stawt a new one?");
            UIText.SetString("map_journal_page", "Jouwnaw Page");
            UIText.SetString("scores_top", "Top Scowes");
            UIText.SetString("scores_friends", "Fwiends");
            UIText.SetString("scores_none", "No Entwies Yet!");
            UIText.SetString("scores_no_connection", "No Connection!");
            UIText.SetString("scores_too_many_requests", "Too Many Wequests! Pwease twy again wata");
            UIText.SetString("popup_cant_split", "Cannot Spwit!");
            UIText.SetString("help_daily_run_first", "Daiwy Voyage|De Daiwy Voyage is genewawwy mowe difficuwt than de main game mode.\n\nEach day, a new adventuwe wiww be genewated wif wandom cawds & modifiews.\n\nAww cawds, twibes, events & chawms awe unwocked duwing Daiwy Voyage wuns.\n\nYu onwy get one attempt. Good wuck!");
            UIText.SetString("tutorial_battle2_41a", "<size=0.35>[{0}] has [Bawwage], which means it wiww hit [aww tawgets in de wow]\n\nCuwwentwy, [{0}'s] attack wiww hit [both] of yuw chawactews!\n\nTwy moving [{1}] to de oda wow so dat [{0}] wiww onwy hit dem");
            UIText.SetString("tutorial_battle2_41b", "<size=0.35>[{0}] has [Bawwage], which means it wiww hit [aww tawgets in de wow]\n\nCuwwentwy, [{0}'s] attack wiww hit [both] of yuw chawactews!\n\nTwy moving yuw [Weada]<sprite name=crown> to de oda wow so dat [{0}] wiww onwy hit [{1}] ");
            UIText.SetString("popup_play_crown_first", "Pway <sprite name=crown> Cawds Fiwst!");
            UIText.SetString("dtutorial_aimless", "<size=0.35>Watch out fow [{0}]!\n\nDey awe [Aimwess], which means deiw attack wiww hit a [wandom tawget in de wow]");
            UIText.SetString("dtutorial_reaction", "<size=0.35>[{0}] has a [Weaction]<sprite name=reaction> effect!\n\nWike [Countews]<sprite name=counter>, [Weactions] can be fwozen wif [Snow]<sprite name=snow> to stop de effect fwom occuwing");
            UIText.SetString("tutorial_battle3_1", "<size=0.35>It's nowmawwy a good idea to get yuw [Fwens] on to de [Battwefiewd] as soon as possibwe!\n\nDeiw [Counta]<sprite name=counter> wiww onwy stawt counting down when dey awe on de [Battwefiewd]");
            UIText.SetString("popup_no_summoned_allies", "No Summoned Awwies!");
            UIText.SetString("event_grab_crown", "Gwab De Cwown!");
            UIText.SetString("tutorial_crown", "Unwike [Chawms], [Cwowns] can be wemoved and switched to diffewent cawds between Battwes");
            UIText.SetString("dtutorial_redraw2", "<size=0.3>It's usuawwy a good idea to hit de [Wedwaw Beww] eawwy to get yuw [Fwens] on de Battwefiewd as soon as possibwe!");
            UIText.SetString("tutorial_kill_leader_warning", "<size=0.3>Using [{0}] dewe wiww kiww yuw [Weada]!");
            UIText.SetString("map_battle_pengoons", "De Pengoons");
            UIText.SetString("map_battle_snowbos", "De Snowbo Squad");
            UIText.SetString("map_battle_berries", "De Gwobewwies");
            UIText.SetString("map_battle_frosters", "De Fwost Shades");
            UIText.SetString("map_battle_snowbears", "De Snowwand Beaws");
            UIText.SetString("map_battle_shrooms", "De Noxious Shwooms");
            UIText.SetString("map_battle_goats", "De Demonhown Goats");
            UIText.SetString("map_battle_shell", "De Shewwed Husks");
            UIText.SetString("map_battle_monkeys", "De Spice Mokos");
            UIText.SetString("map_battle_teeth", "De Toothy Shades");
            UIText.SetString("map_battle_drek", "De Woowwy Dwek");
            UIText.SetString("map_battle_hogs", "De Wiwd Hogs");
            UIText.SetString("map_battle_crabs", "De Ice Kwabs");
            UIText.SetString("popup_no_allies_to_attack", "No Awwies To Attack!");
            UIText.SetString("update_173_title", "Fixes & Tinkews (v1.0.5)");
            UIText.SetString("choose_tribe", "Sewect a Twibe");
            UIText.SetString("map_injured_companion", "Injuwed Fwen");
            UIText.SetString("unit_targets", "Unit Tawgets");
            UIText.SetString("event_choose_rewards", "Take {0} Wewawds!");
            UIText.SetString("help_enemy_wave_bell", "Meanie Wave Beww|De meanie wave beww shows how many tuwns awe weft befowe de next wave of meanies awwives!\n\nIf dewe is enough space avaiwabwe, yu can <#fff>hit de beww</color> to caww de next wave of meanies eawwy.");
            UIText.SetString("event_sun_blessing", "Bwessing fwom de Sun");
            UIText.SetString("inspect_charms_gamepad", "<action=Options> Inspect Chawms");
            UIText.SetString("inspect_charms_mouse", "Use <action=Select> to Inspect Chawms");
            UIText.SetString("map_lost_traveller", "Wost Twavewwa");
            UIText.SetString("event_take_card", "Take Cawd");
            UIText.SetString("event_choose_negative_charm", "Choose a Negative Chawm");
            UIText.SetString("storm_bell_unlock_title", "Stowm Bewws Unwocked!");
            UIText.SetString("storm_bell_unlock_body", "<#FF56FF>Stowm Bewws</color> pwovide additionaw chawwenge, fow those bwave enough!\n\nYu can choose which <#FF56FF>Stowm Bewws</color> yu want to enabwe befowe stawting each wun.\n\nYuw <#FF56FF>Stowm Stwength Wimit</color> wiww incwease afta each successfuw wun at fuww stwength.");
            UIText.SetString("storm_bell_points", "Stowm Points: <size=0.45>{0}/10</size>");
            UIText.SetString("storm_bell_challenge_level", "Difficuwty: <size=0.45>{0}</size>");
            UIText.SetString("difficulty_easy", "Miwd");
            UIText.SetString("difficulty_normal", "Modewate");
            UIText.SetString("difficulty_hard", "Hawd");
            UIText.SetString("difficulty_extreme", "Extweme");
            UIText.SetString("difficulty_nightmare", "Nightmawe");
            UIText.SetString("storm_bell_points_maximum", "Stowm Stwength Wimit:");
            UIText.SetString("popup_cant_move", "Cannot Move!");
            UIText.SetString("new_chiseled_frame", "Unwocked <#ff0>{0}</color> New\n<size=0.55><#ff0>Chisewed Cawd Fwame");
            UIText.SetString("new_chiseled_frames", "Unwocked <#ff0>{0}</color> New\n<size=0.55><#ff0>Chisewed Cawd Fwames");
            UIText.SetString("new_gold_frame", "Unwocked <#ff0>{0}</color> New\n<size=0.55><#ff0>Gowd Cawd Fwame");
            UIText.SetString("new_gold_frames", "Unwocked <#ff0>{0}</color> New\n<size=0.55><#ff0>Gowd Cawd Fwames");
            UIText.SetString("storm_bell_points_overcranked", "OVEWCWANKED");
            UIText.SetString("storm_point_add", "\n\n<color=#FF70FF>Stowm Stwength +{0}");
            UIText.SetString("event_health_lost", "<#EB6F75>De Stowm</color> takes its toww on <#EB6F75>{0}</color>...\n-{1}<size=0.44><sprite name=health>");
            UIText.SetString("storm_bell_points_increased", "+{0} Stowm Stwength Wimit");
            UIText.SetString("overcrank_unlock_title", "Ovewcwank Unwocked!");
            UIText.SetString("overcrank_unlock_body", "Yu can now puww de <#FF5440>Ovewcwank</color> to enabwe AWW <#FF56FF>Stowm Bewws</color> and take on Wiwdfwost's uwtimate chawwenge!<size=0.38>\n\n<#374D5D>Dis chawwenge is sowewy a test of yuw skiww and does not gwant any additionaw achievements ow unwocks");
            UIText.SetString("storm_bell_gold_frames_remaining", "{0}/13 Gowden");
            UIText.SetString("gold_card_frames", "Speciaw Cawd Fwames");
            UIText.SetString("screen_transition", "Scween Twansition");
            UIText.SetString("screen_transition_snow", "Snow");
            UIText.SetString("screen_transition_fade_to_black", "Bwack Fade");
            UIText.SetString("tutorial_injured_companion_event", "<size=0.35>[{0}] wetuwns [Injuwed] fwom yuw pwevious wun!\n\n[Injuwed] fwens stawt each Battwe wif hawf <sprite name=health> and <sprite name=attack>\n\nDey wiww wecova if dey suwvive de next battwe");
            UIText.SetString("settings_vfx", "Visuaw Effects");
            UIText.SetString("mods", "Mods");
            UIText.SetString("settings_privacy_policy", "Pwivacy Powicy");
            UIText.SetString("error_card_data_missing", "Cawd Data Missing :(");
            UIText.SetString("error_save_missing_data", "Save fiwe has missing data :(");
            UIText.SetString("map_battle_healers", "De Bog Bewwies");
            UIText.SetString("map_battle_bombers", "De Snow Wumps");
            UIText.SetString("map_battle_ink", "De Ink Sacks");
            UIText.SetString("map_battle_cloners", "De Gunk Bugs");
            Upgrades.SetString("charm_acorn", "Acown Chawm");
            Upgrades.SetString("charm_acorn_text", "Gain <8><keyword=shell>");
            Upgrades.SetString("charm_balanced", "Bawance Chawm");
            Upgrades.SetString("charm_balanced_text", "Set <keyword=health>, <keyword=attack> and <keyword=counter> to <3>");
            Upgrades.SetString("charm_barrage", "Pomegwanate Chawm");
            Upgrades.SetString("charm_barrage_text", "Gain <keyword=barrage> and weduce <keyword=attack> by <2>");
            Upgrades.SetString("charm_battle", "Battwe Chawm");
            Upgrades.SetString("charm_battle_text", "<+2><keyword=attack>");
            Upgrades.SetString("charm_blings", "Bwing Chawm");
            Upgrades.SetString("charm_blings_text", "Gain <5><keyword=blings> fwom each kiww");
            Upgrades.SetString("charm_bombskull", "Bombskuww Chawm");
            Upgrades.SetString("charm_bombskull_text", "When destwoyed, deaw <8> owie to meanies in de wow");
            Upgrades.SetString("charm_boost", "Wumin Wing");
            Upgrades.SetString("charm_boost_text", "Boost effects by <1>");
            Upgrades.SetString("charm_cake", "Cake Chawm");
            Upgrades.SetString("charm_cake_text", "Boost effects by <4> and gain <keyword=consume>");
            Upgrades.SetString("charm_cloudberry", "Cwoudbewwy Chawm");
            Upgrades.SetString("charm_cloudberry_text", "Westowe <3><keyword=health> on kiww");
            Upgrades.SetString("charm_draw", "Pinch Chawm");
            Upgrades.SetString("charm_draw_text", "Gain <keyword=draw 2> on kiww");
            Upgrades.SetString("charm_frenzy_consume", "Fwenzy Chawm");
            Upgrades.SetString("charm_frenzy_consume_text", "Add <x2><keyword=frenzy> and gain <keyword=consume>");
            Upgrades.SetString("charm_frosthand", "Fwosthand Chawm");
            Upgrades.SetString("charm_frosthand_text", "Appwy <1><keyword=frost>");
            Upgrades.SetString("charm_fury", "Fwog Chawm");
            Upgrades.SetString("charm_fury_text", "Gain <keyword=fury 4>");
            Upgrades.SetString("charm_heart", "Heawt Chawm");
            Upgrades.SetString("charm_heart_text", "<+5><keyword=health>");
            Upgrades.SetString("charm_hook", "Hook Chawm");
            Upgrades.SetString("charm_hook_text", "Gain <keyword=pull 2>");
            Upgrades.SetString("charm_noomlin", "Noomwin Chawm");
            Upgrades.SetString("charm_noomlin_text", "Gain <keyword=noomlin>");
            Upgrades.SetString("charm_pig", "Hog Chawm");
            Upgrades.SetString("charm_pig_text", "Gain <keyword=pigheaded>\n<+7><keyword=health>");
            Upgrades.SetString("charm_punchfist", "Punchfist Chawm");
            Upgrades.SetString("charm_punchfist_text", "Gain <keyword=smackback>");
            Upgrades.SetString("charm_scrap", "Scwap Chawm");
            Upgrades.SetString("charm_scrap_text", "Add <1><keyword=scrap>");
            Upgrades.SetString("charm_shell_on_kill", "Shiewd Chawm");
            Upgrades.SetString("charm_shell_on_kill_text", "Gain <3><keyword=shell> on kiww");
            Upgrades.SetString("charm_shroom", "Shwoom Chawm");
            Upgrades.SetString("charm_shroom_text", "Appwy <1><keyword=shroom>");
            Upgrades.SetString("charm_snowball", "Snowbaww Chawm");
            Upgrades.SetString("charm_snowball_text", "Appwy <1><keyword=snow>");
            Upgrades.SetString("charm_snow_immune", "Pengu Chawm");
            Upgrades.SetString("charm_snow_immune_text", "When <keyword=snow>'d, gain equaw <keyword=attack>");
            Upgrades.SetString("charm_spice", "Spice Chawm");
            Upgrades.SetString("charm_spice_text", "Gain <2><keyword=spice> when hit");
            Upgrades.SetString("charm_teeth", "Bite Chawm");
            Upgrades.SetString("charm_teeth_text", "Stawt wif <3><keyword=teeth>");
            Upgrades.SetString("charm_sun", "Sun Chawm");
            Upgrades.SetString("charm_sun_text", "Weduce <keyword=counter> by 1");
            Upgrades.SetString("charm_teeth_when_hit", "Tiga Chawm");
            Upgrades.SetString("charm_teeth_when_hit_text", "Gain <1><keyword=teeth> when hit");
            Upgrades.SetString("charm_weakness", "Weakness Chawm");
            Upgrades.SetString("charm_weakness_text", "Weduce <keyword=attack> by <2>");
            Upgrades.SetString("charm_gnome", "Gnome Chawm");
            Upgrades.SetString("charm_gnome_text", "Add <x1><keyword=frenzy> and gain <keyword=aimless>");
            Upgrades.SetString("crown", "Cwown");
            Upgrades.SetString("crown_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe");
            Upgrades.SetString("charm_goat", "Goat Chawm");
            Upgrades.SetString("charm_goat_text", "Appwy <1><keyword=demonize>");
            Upgrades.SetString("charm_flameblade", "Fwamebwade Chawm");
            Upgrades.SetString("charm_flameblade_text", "Wepwace cuwwent <keyword=attack> wif appwy <keyword=overload>");
            Upgrades.SetString("charm_consume_overburn", "Boonfiwe Chawm");
            Upgrades.SetString("charm_consume_overburn_text", "When consumed, appwy <2><keyword=overload> to aww meanies");
            Upgrades.SetString("charm_critical", "Cwiticaw Chawm");
            Upgrades.SetString("charm_critical_text", "Gain <keyword=combo>");
            Upgrades.SetString("charm_ink", "Squid Chawm");
            Upgrades.SetString("charm_ink_text", "Appwy <2><keyword=null>");
            Upgrades.SetString("charm_bom", "Bom Chawm");
            Upgrades.SetString("charm_bom_text", "Appwy <1><keyword=weakness>");
            Upgrades.SetString("charm_crush", "Wecycwe Chawm");
            Upgrades.SetString("charm_crush_text", "Gain <keyword=recycle 1>\n<+4><keyword=attack>");
            Upgrades.SetString("charm_trash", "Twash Chawm");
            Upgrades.SetString("charm_trash_text", "Gain <keyword=trash 1>");
            Upgrades.SetString("charm_wrecker", "Moose Chawm");
            Upgrades.SetString("charm_wrecker_text", "Incwease <keyword=counter> by <1>\n<+3><keyword=attack>");
            Upgrades.SetString("charm_jumbo", "Duwian Chawm");
            Upgrades.SetString("charm_jumbo_text", "<+4><keyword=attack>\nWemove aww effects");
            Upgrades.SetString("charm_effigy", "Wamb Chawm");
            Upgrades.SetString("charm_effigy_text", "Gain <keyword=effigy 2>");
            Upgrades.SetString("charm_one_punch", "Mowten Egg Chawm");
            Upgrades.SetString("charm_one_punch_text", "Gain <keyword=consume>\n<+5><keyword=attack>");
            Upgrades.SetString("charm_snowbun", "Snowbun Chawm");
            Upgrades.SetString("charm_snowbun_text", "When <keyword=snow>'d, gain equaw <keyword=attack>");
            Upgrades.SetString("charm_peppernut", "Peppewnut Chawm");
            Upgrades.SetString("charm_peppernut_text", "When <keyword=shell>'d, gain <keyword=spice> instead");
            Upgrades.SetString("charm_truffle", "Twuffwe Chawm");
            Upgrades.SetString("charm_truffle_text", "Appwy <3><keyword=shroom>\n<-2><keyword=health>");
            Upgrades.SetString("charm_block", "Bwock Chawm");
            Upgrades.SetString("charm_block_text", "Stawt wif <1><keyword=block>");
            Upgrades.SetString("charm_keychain", "Chuckwe Chawm");
            Upgrades.SetString("charm_keychain_text", "Wemove Chawm wimit");
            Upgrades.SetString("charm_bolster", "Waspbewwy Chawm");
            Upgrades.SetString("charm_bolster_text", "<+1><keyword=attack>\n<+3><keyword=health>");
            Upgrades.SetString("charm_cherry", "Stwawbewwy Chawm");
            Upgrades.SetString("charm_cherry_text", "When consumed, add <+2><keyword=health> to aww awwies");
            Upgrades.SetString("charm_bright", "Moko Chawm");
            Upgrades.SetString("charm_bright_text", "Add <x1><keyword=frenzy>\n<-1><keyword=attack>\n<-1><keyword=health>");
            Upgrades.SetString("charm_greed", "Gweed Chawm");
            Upgrades.SetString("charm_greed_text", "Gain <keyword=greed>");
            Upgrades.SetString("charm_consume", "Bwead Chawm");
            Upgrades.SetString("charm_consume_text", "Gain <keyword=consume>");
            Upgrades.SetString("charm_spark", "Spawk Chawm");
            Upgrades.SetString("charm_spark_text", "Gain <keyword=spark>");
            Upgrades.SetString("charm_reduce_attack", "Weakness Chawm");
            Upgrades.SetString("charm_reduce_attack_text", "<-1><keyword=attack>");
            Upgrades.SetString("charm_reduce_frenzy", "Wazy Chawm");
            Upgrades.SetString("charm_reduce_frenzy_text", "Weduce <keyword=frenzy> by <x1>");
            Upgrades.SetString("charm_aimless", "Fish Chawm");
            Upgrades.SetString("charm_aimless_text", "Gain <keyword=aimless>");
            Upgrades.SetString("charm_reduce_effects", "Fwostbite Chawm");
            Upgrades.SetString("charm_reduce_effects_text", "Weduce effects by <1>");
            Upgrades.SetString("charm_reduce_health", "Cowdheawt Chawm");
            Upgrades.SetString("charm_reduce_health_text", "<-3><keyword=health>");
            Upgrades.SetString("charm_increase_counter", "Fwozen Sun Chawm");
            Upgrades.SetString("charm_increase_counter_text", "Incwease <keyword=counter> by <1>");
            Upgrades.SetString("charm_gain_demonize", "Demon Eye Chawm");
            Upgrades.SetString("charm_gain_demonize_text", "Stawt wif <1><keyword=demonize>");
            Upgrades.SetString("charm_gain_snow", "Ooba Chawm");
            Upgrades.SetString("charm_gain_snow_text", "Stawt wif <3><keyword=snow>");
            Upgrades.SetString("charm_gain_frost", "Fwostwowf Chawm");
            Upgrades.SetString("charm_gain_frost_text", "Stawt wif <4><keyword=frost>");
            Upgrades.SetString("charm_reduce_scrap", "Bwoken Chawm");
            Upgrades.SetString("charm_reduce_scrap_text", "<-1><keyword=scrap>");
            Upgrades.SetString("charm_remove_effects", "Squidskuww Chawm");
            Upgrades.SetString("charm_remove_effects_text", "Stawt wif <4><keyword=null>");
            Upgrades.SetString("crown_hogheaded", "Hog Cwown");
            Upgrades.SetString("crown_hogheaded_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\nGain <keyword=pigheaded>\n\n<Cannot be removed>");
            Upgrades.SetString("crown_increase_counter", "Fwozen Cwown");
            Upgrades.SetString("crown_increase_counter_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\nIncwease <keyword=counter> by <1>\n\n<Cannot be removed>");
            Upgrades.SetString("crown_demonize", "Demon Cwown");
            Upgrades.SetString("crown_demonize_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\nStawt wif <1><keyword=demonize>\n\n<Cannot be removed>");
            Upgrades.SetString("crown_take_blings", "Gobwing Cwown");
            Upgrades.SetString("crown_take_blings_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\nTake <1><keyword=blings> when twiggewing\n\n<Cannot be removed>");
            Upgrades.SetString("crown_brittle", "Gwass Cwown");
            Upgrades.SetString("crown_brittle_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\n<-2><keyword=health>\n\n<Cannot be removed>");
            Upgrades.SetString("crown_reduce_attack", "Weak Cwown");
            Upgrades.SetString("crown_reduce_attack_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\n<-1><keyword=attack>\n\n<Cannot be removed>");
            Upgrades.SetString("crown_ink", "Squidskuww Cwown");
            Upgrades.SetString("crown_ink_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\nStawt wif <3><keyword=null>\n\n<Cannot be removed>");
            Upgrades.SetString("crown_cursed", "Cuwsed Cwown");
            Upgrades.SetString("crown_cursed_text", "Cawds wif Cwowns awe awways pwayed at de stawt of battwe\n\nWeduces\n<keyword=attack> and <keyword=health> by <1> if possibwe\n\n<Cannot be removed>");
            Upgrades.SetString("charm_trash_text2", "Gain <keyword=trash 1> and <keyword=draw 1>");
            Upgrades.SetString("charm_peppernut_text2", "Wepwace <keyword=shell> effects wif <keyword=spice> and vice vewsa");
            Upgrades.SetString("charm_trash2", "Geaw Chawm");
            Upgrades.SetString("charm_zoomlin", "Zoomwin Chawm");
            Upgrades.SetString("charm_zoomlin_text", "When pwayed, add <keyword=zoomlin> to a wandom cawd in hand");
            Upgrades.SetString("charm_bootleg", "Jimbo Chawm");
            Upgrades.SetString("charm_bootleg_text", "<keyword=health><keyword=attack><keyword=counter> awe wandomized between <2> and <5>");
            Upgrades.SetString("charm_hunger", "Zoomwin Chawm");
            Upgrades.SetString("charm_hunger_text", "Gain <keyword=zoomlin> and <keyword=consume>");
            Upgrades.SetString("charm_shadeclay", "Shade Swug");
            Upgrades.SetString("charm_shadeclay_text", "Appwy de same effect as de wast <Charm> appwied to de cawd");
            Upgrades.SetString("charm_flameberry", "Scowchbewwy Chawm");
            Upgrades.SetString("charm_flameberry_text", "Weduce <keyword=health> by hawf\nIncwease <keyword=attack> equaw to <keyword=health>");
            Upgrades.SetString("charm_glass", "Sungwass Chawm");
            Upgrades.SetString("charm_glass_text", "Weduce <keyword=counter> by hawf\nSet <keyword=health> to <1>\nGain <keyword=fragile>");
            Upgrades.SetString("charm_plink", "Beetwe Chawm");
            Upgrades.SetString("charm_plink_text", "<+1><keyword=attack>\nDoes not take up a chawm swot");
            Upgrades.SetString("charm_blue", "Fwozen Heawt Chawm");
            Upgrades.SetString("charm_blue_text", "Stawt wif <2><keyword=block>\nWeduce <keyword=health> to <1>");
            Upgrades.SetString("charm_muncher", "Muncha Chawm");
            Upgrades.SetString("charm_muncher_text", "Pewmanentwy destwoy de cawd when dis is equipped");
            Upgrades.SetString("charm_heartmist", "Nouwish Chawm");
            Upgrades.SetString("charm_heartmist_text", "When hit, westowe <keyword=health> by <1>");
            Upgrades.SetString("charm_heartburn", "Jewewbewwy Chawm");
            Upgrades.SetString("charm_heartburn_text", "Gain <keyword=heartburn>");
            Upgrades.SetString("charm_mime", "Mime Chawm");
            Upgrades.SetString("charm_mime_text", "Wepwace effects wif those of a wandom <Fren> in yuw deck ow wesewve");
            Upgrades.SetString("charm_shredder", "Fidget Chawm");
            Upgrades.SetString("charm_shredder_text", "Wepwace <keyword=recycle> effects wif <keyword=trash> and vice vewsa");
            UIText.SetString("language_this", "Engwish");
            CardText.SetString("Increase Effects_text", "Boost effects by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Sneak_title", "Sneak");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Sneak_desc", "Attacks ignowe Smackback & \"when hit\" effects");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TargetLeader_title", "Tawget Weada");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TargetLeader_desc", "Awways tawget de meanie weada");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Sponge_title", "Sponge");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Sponge_desc", "When <keyword=null>'d, westowe equaw <keyword=health> instead");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Upgradeable_title", "Potentiaw");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Upgradeable_desc", "Can be ascended somehow...");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Pincer_title", "Pinca");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Pincer_desc", "Hits de cwosest & fuwdest tawgets in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Unhealable_title", "Unheawabwe");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Unhealable_desc", "Cannot be heawed");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Wash_title", "Wash");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Wash_desc", "Wemove aww appwied statuses");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Limit_title", "Wimit");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Limit_desc", "Wimit gets weduced by <1> on use, cawd is consumed when wimit wuns out.");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Wrath_title", "Wwath");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Wrath_desc", "Gain <keyword=attack> on kiww");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Feral_title", "Fewaw");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Feral_desc", "When a <keyword=wild> unit is kiwwed, gain <x1><keyword=frenzy> and wose <1> <Feral>. On twigga, wose <1> <Feral>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Bankrupt_title", "Bankwupt");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Bankrupt_desc", "When kiwwed, active combos give <3> wess <keyword=blings>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ImmuneReduction_title", "Wesiwient");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ImmuneReduction_desc", "Effects cannot be weduced");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Gift_title", "Gift");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Gift_desc", "When kiwwed, appwy <1><keyword=block> to de attacka");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Enhanced_title", "Enhanced");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Enhanced_desc", "<+10><keyword=health>, <+2><keyword=attack>, and statuses/effects awe incweased by <1>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ReduceOwnMaxCounter_text", "Weduce its own <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TriggerWhenRedrawHit_text", "Twigga when de Wedwaw Beww is wang");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileInHandItemsTakeGold_text", "Whiwe in hand, wose <{a}><keyword=blings> when using an item");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.AddFickleHandToHand_text", "Add a Wosha Hand to yuw hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.AddFickleHandToHandOnPlay_text", "Add <{a}> Wosha Hand{pw} to yuw hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TakeDamageWhenAllyHitByEnemy_text", "When an awwy is hit by an meanie, take <{a}> owie");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.StealGoldOnPlayText_text", "Wose <{a}><keyword=blings>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyExplodeOnPlay_text", "Appwy <{a}><keyword=explode>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhenHitGainSnow_text", "When hit, gain <{a}><keyword=snow>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.RomeoEffect_text", "When an awwy in de wow is kiwwed, sacwifice sewf");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountDownTargetOnPlay_text", "Count down tawget's <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnHitReduceAttackToSelf_text", "Weduce own <keyword=attack> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SnowEqualToFrost_text", "Wepwace <keyword=frost> wif equaw <keyword=snow>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ReduceCounterRow_text", "Count down <keyword=counter> of awwies in de wow by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ExtraDMGCounter_text", "Deaw additionaw <keyword=attack> equaw to <keyword=counter>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.IncreaseAllAlliesHealth_text", "Incwease <keyword=health> of aww awwies by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CleanseAllAlliesIfUndamaged_text", "If unowied, <keyword=cleanse> aww awwies");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.PunishFrost_text", "When awwy is hit, appwy <{a}><keyword=frost> to de attacka");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnKillGainScrap_text", "Gain <{a}><keyword=scrap> on kiww");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnTurnAddFrostOrGainDmg_text", "If tawget has <keyword=frost>, gain <{a}><keyword=attack>, odewwise appwy <{a}><keyword=frost>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.HealAndReduceHealing_text", "Westowe <{a}><keyword=health>\n Weduce by amount heawed");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveReduceEffectsFromFrost_text", "Whiwe active, weduce effects of units fow evewy <{a}><keyword=frost> dey have");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnKillGainBlings_text", "Gain <{a}><keyword=blings> on kiww");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnNonKillSummonRoshaHands_text", "Odewwise, get <{a}> Wosha Hands");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyDemonizeToStatusedTargetsOnPlay_text", "Appwy <{a}><keyword=demonize> to aww units wif an appwied status");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.AverageAllCounters_text", "Set aww units' <keyword=counter> to deiw avewage");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.BoostAllyAheadOnPlay_text", "Incwease effects of awwy ahead by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonMazkin_text", "Summon <card=Wildfrost.Jacorb.Snowfall.Mazkin>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.StackEffectWhenRedrawBellRung_text", "When de wedwaw beww is hit, incwease by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyGift_text", "Appwy <keyword=wildfrost.jacorb.snowfall.gift>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveAllUnitsGetGift_text", "Whiwe active, aww units get <keyword=wildfrost.jacorb.snowfall.gift>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Frostbite_text", "Weduce tawget's <keyword=health> and <keyword=attack> by <{a}> if possibwe");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ExcessFrost_text", "Deaw additionaw <keyword=attack> equaw to tawget's <keyword=frost>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.PostAttackBreakSnowShield_text", "Afta attacking, bweak de tawget's <keyword=snow> shiewd if dey have one");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SpiceSteal_text", "When something is hit by an awwy/item, appwy <{a}><keyword=spice> to sewf");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ShellSteal_text", "When something is hit by an awwy/item, appwy <{a}><keyword=shell> to sewf");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SnowEqualToHealth_text", "Appwy <keyword=snow> equaw to cuwwent <keyword=health>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SnowTargetsInRowOtherThanTarget_text", "Appwy <{a}><keyword=snow> to meanies in fwont of tawget");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveAddFrenzyToAllyAhead_text", "Whiwe active, add <x{a}><keyword=frenzy> to de awwy ahead");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveAddFrenzyToAlliesInRow_text", "Whiwe active, add <x{a}><keyword=frenzy> to awwies in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.HealWhenEnemySnowed_text", "When an meanie is <keyword=snow>'d, heaw <{a}><keyword=health>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveAddFrenzyEqualToAttackingAllies_text", "Whiwe active, has <keyword=frenzy> equaw to numba of awwies/meanies wif exactwy 1 <sprite name=counter>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhenItemConsumedGainFrenzy_text", "When an item is <keyword=consume><cc>d</cc>, gain <{a}><keyword=frenzy>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyWrath_text", "Appwy <keyword=wildfrost.jacorb.snowfall.wrath> <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.LoseHalfHP_text", "Hawve an awwy's <keyword=health>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyFrostEqualToDamageOnHit_text", "Appwy <keyword=frost> equaw to <keyword=attack> (up to <{a}>)");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.GrantApplyFrostEqualToDamageOnHit_text", "Awwow tawget to appwy <keyword=frost> equaw to deiw <keyword=attack> (up to <{a}>)");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.DestroyLeftmostCardInHandOnPlay_text", "Destwoy de weftmost cawd in yuw hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnKillApplyBlockToFrontAlly_text", "Appwy <{a}><keyword=block> to fwont awwy on kiww");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.OnNonKillConsumeSelf_text", "Odewwise, <keyword=consume> sewf");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ExtraDmgToGift_text", "Deaw <{a}> extwa owie if de tawget has <keyword=wildfrost.jacorb.snowfall.gift>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SpiceHarvest_text", "Appwy <keyword=spice> equaw to cawds in hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ShellHarvest_text", "Appwy <keyword=shell> equaw to cawds in hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.KingMokoSpiceApply_text", "When hit, appwy <{a}><keyword=spice> to evewyone in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.KingMokoShellApply_text", "When hit, appwy <{a}><keyword=shell> to evewyone in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.LoseSpice_text", "Wemove <{a}><keyword=spice>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.LoseShell_text", "Wemove <{a}><keyword=shell>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.HealSpice_text", "Wemove hawf <keyword=spice> fwom sewf and appwy equaw <keyword=spice> to awwies in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.HealSpiceAlt_text", "Appwy <keyword=spice> to awwies in de wow equaw to totaw <keyword=spice> of sewf & awwies in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.HealShell_text", "Wemove hawf <keyword=shell> fwom sewf and appwy equaw <keyword=shell> to awwies in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.HealShellAlt_text", "Appwy <keyword=shell> to awwies in de wow equaw to totaw <keyword=shell> of sewf & awwies in de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountDownEnemiesInRow_text", "Count down aww meanies in de wow by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveHalveAlliesSpiceOnAttack_text", "When an awwy attacks, hawve deiw <keyword=spice>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveHalveAlliesShellOnAttack_text", "When an awwy attacks, hawve deiw <keyword=shell>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountdownIfSpiceGT2_text", "Count down <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountdownIfShellGT2_text", "Count down <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.FillBoardWithHogs_text", "Depwoy <card=Wildfrost.Jacorb.Snowfall.HogAlly>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonHogsToBoard_text", "Depwoy <{a}> <card=Wildfrost.Jacorb.Snowfall.HogAlly><cc>s</cc>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyWild_text", "Appwy <keyword=wild>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyFeral_text", "Appwy <{a}><keyword=wildfrost.jacorb.snowfall.feral>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyFeralToRandomAllyOnPlay_text", "Appwy <{a}><keyword=wildfrost.jacorb.snowfall.feral> to a wandom awwy");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ApplyFeralToRandomEnemyOnPlay_text", "Appwy <{a}><keyword=wildfrost.jacorb.snowfall.feral> to a wandom meanie");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.GainFrenzyWhenDiscarded_text", "When de Wedwaw Beww is wang, gain <x{a}><keyword=frenzy>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ReduceMaxHealthInstant_text", "Weduce <keyword=health> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountUp_text", "Count up <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ExtraDamageEqualToBlock_text", "Deaw additionaw <keyword=attack> equaw to <keyword=block>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountDownWhenBlockGained_text", "Count down <keyword=counter> by <{a}> when sewf ow awwy gains <keyword=block>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.BullCharmEffect_text", "Deaw additionaw <keyword=attack> equaw to <keyword=frenzy>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SuperstarCharmEffect_text", "Whiwe unowied, <keyword=frenzy> is incweased by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.MoltenPepperCharmEffectSpice_text", "When <keyword=spice>'d, gain <{a}> wess but count down <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.MoltenPepperCharmEffectShell_text", "When <keyword=shell>'d, gain <{a}> wess but count down <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.PhoenixCharmEffectSpice_text", "When an awwy is hit, gain <{a}><keyword=spice>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.PhoenixCharmEffectShell_text", "When an awwy is hit, gain <{a}><keyword=shell>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WashAttackerWhenHit_text", "<keyword=wildfrost.jacorb.snowfall.wash> de attacka when hit");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ExplodeBom_text", "When destwoyed, appwy <{a}><keyword=weakness> to fwontmost meanie in each wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhenBomAppliedGainFrenzy_text", "When <keyword=weakness> is appwied, gain <x{a}><keyword=frenzy>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonBomBunnyWhenHit_text", "When hit, depwoy <card=Wildfrost.Jacorb.Snowfall.BomBunny>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhenAnythingInkedGainAttack_text", "When anything weceives <keyword=null>, gain <+{a}><keyword=attack>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhenKilledSpreadInk_text", "When destwoyed, appwy <{a}><keyword=null> to evewyone");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveAlliesDropNoBlings_text", "Whiwe active, awwies dwop no <keyword=blings>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TriggerAgainstAttackerWhenAllyIsHit_text", "Twigga against attacka when an awwy is hit");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.BonusDamageJunk_text", "Deaw additionaw <keyword=attack> equaw to <card=Junk> in hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ConsumeJunkInHandOnTurn_text", "Consume aww <card=Junk> in hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SwapRowsWhenHit_text", "When hit, swap wows");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TrashWhenKilled_text", "When destwoyed, <keyword=trash> <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.CountUpWhenJunked_text", "When hit by <card=Junk>, count up <keyword=counter> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ConsumeLeftmostItemInHandOnTurn_text", "Destwoy de weftmost <{a}> cawds in yuw hand");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.AddAttackPostAttack_text", "Fow each tawget hit, gain <+{a}><keyword=attack>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ExtraDMGToOverloaded_text", "Deaw <{a}> extwa owie if de tawget has <keyword=overload>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.StackEffectWhenAllyKilled_text", "When an awwy is kiwwed, incwease effect by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.StackEffectPostAttack_text", "Fow each tawget affected, incwease effect by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.RemoveOverburnWhenHit_text", "When hit, wemove <{a}><keyword=overload> fwom attacka");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.StealDMGOfKilledUnits_text", "When a unit is kiwwed, gain deiw <keyword=attack>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.EatRandomAllyAbsorbAttackAndEffects_text", "Afta attacking, eat a wandom awwy, absowbing deiw <keyword=attack> and <keyword=health>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ReduceAllyCounterWhenDestroyed_text", "When destwoyed, weduce <keyword=counter> of a wandom awwy by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.Hurt2AndStrengthenRandomAlly_text", "Incwease a wandom awwy's <keyword=attack> by <{ap2}>, but weduce deiw <keyword=health> by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhenAllyKilledApplyFrenzyToAllAllies_text", "When an awwy is kiwwed, add <x{a}><keyword=frenzy> to aww awwies");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikaiju_text", "When destwoyed, summon <card=Wildfrost.Jacorb.Snowfall.EvilChikaiju> to de back of de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikagoru_text", "When destwoyed, summon <card=Wildfrost.Jacorb.Snowfall.EvilChikagoru> to de back of de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikashi_text", "When destwoyed, summon <card=Wildfrost.Jacorb.Snowfall.EvilChikashi> to de back of de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikasan_text", "When destwoyed, summon <card=Wildfrost.Jacorb.Snowfall.EvilChikasan> to de back of de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikani_text", "When destwoyed, summon <card=Wildfrost.Jacorb.Snowfall.EvilChikani> to de back of de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikichi_text", "When destwoyed, summon <card=Wildfrost.Jacorb.Snowfall.EvilChikichi> to de back of de wow");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.DefensiveByNumAllies_text", "When hit, take wess owie equaw to numba of awwies");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.WhileActiveIncreaseAllyEffects_text", "Incwease awwies' effects by <{a}>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.GainFrenzyWhenAllyKilled_text", "When an awwy is kiwwed, gain <x{a}><keyword=frenzy>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.GainTeethWhenAllyKilled_text", "When an awwy is kiwwed, gain <{a}><keyword=teeth>");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.TriggerWhenAllyKilled_text", "Twigga when an awwy is kiwwed");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.BecomeAttackerWhenKilled_text", "When destwoyed, summon an <keyword=wildfrost.jacorb.snowfall.enhanced> copy of de attacka");
            CardText.SetString("Wildfrost.Jacorb.Snowfall.ImmuneToItems_text", "Immune to items");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BountyHunter_title", "Gunswinga");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.HotHead_title", "Hot Head");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FickleHandRock_title", "Wosha Hand");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FickleHandScissors_title", "Wosha Hand");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FickleHandPaper_title", "Wosha Hand");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FickleHandGun_title", "Wosha Hand");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Fickle_title", "Fickwe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Junkweed_title", "Junkweed");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Mazkin_title", "Mazkin");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Wismer_title", "Wisma");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BiwaLoat_title", "Biwa Woat");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Boar_title", "Boaw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Cinder_title", "Cinda");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.NewEarthBerry_title", "Eawth Bewwy");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.NewBerryWitch_title", "Bewwy Witch");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sweetcaster_title", "Sweetcasta");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.ScaredyCat_title", "Scawedy Cat");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Shilly_title", "Shiwwy");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.GlaceSaber_title", "Gwaciaw Saba");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.SnowFlute_title", "Fwute of Wethawgy");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.LunchBox_title", "Wunch Box");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FickleCane_title", "Fickwe's Cane");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.DemonFan_title", "Viwifan");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FrostCake_title", "Fwostcake");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sundial_title", "Sundiaw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BeeberryHoney_title", "Beebewwy Honey");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BonKoreYoyo_title", "BonKowe Yoyo");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.MazkinMask_title", "Mazkin Mask");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Lavaglass_title", "Wavagwass");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.SpikeWallAlly_title", "Spike Waww");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FrostLantern_title", "Fwost Wantewn");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Lighthouse_title", "Wighthouse");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.PorkypineAlly_title", "Powkypine");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.GrombleAlly_title", "Gwombwe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BigfootAlly_title", "Bigfoot");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.WinterWormAlly_title", "Winta Wowm");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.OobaBearAlly_title", "Ooba Beaw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.JabJoatAlly_title", "Jab Joat");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.PebblePig_title", "Pebbwe Pig");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.RockhogAlly_title", "Wockhog");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.GogongAlly_title", "Gogong");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Pipper_title", "Pippa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Charepi_title", "Chawepi");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Cubbu_title", "Cubbu");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.GrizzleAlly_title", "Gwizzwe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Pengickle_title", "Pengickwe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sniburr_title", "Snibuww");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.MinimokoAlly_title", "Minimoko");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.MakokoAlly_title", "Makoko");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.ReMo_title", "We-Mo");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.HotHog_title", "Hot Hog");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.KrawlerAlly_title", "Kwawwa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.DungrokAlly_title", "Dungwok");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.LumpAlly_title", "Wump");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Blunder_title", "Bwunda");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Plunderclaw_title", "Pwundewcwaw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FrostbiteGem_title", "Fwostbite Gem");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Frostblade_title", "Fwostbwade");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Snowcone_title", "Snowcone");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.LavaGauntlets_title", "Mowten Gauntwets");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.FrostFangs_title", "Fwost Fangs");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.SnowlingBall_title", "Snowwing Baww");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.IcePick_title", "Ice Pick");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.KingMokoAlly_title", "King Moko");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.PepperWitchAlly_title", "Peppa Witch");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Coco_title", "Coco");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.MonkeyWorshipTotemAlly_title", "Moko Head");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.PepperBanner_title", "Peppa Banna");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.PepperHarvest_title", "Spicy Stew");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.ItchingPowder_title", "Itching Powda");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.HogAlly_title", "Hog");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.RazorAlly_title", "Wazow");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.WildHorn_title", "Wiwd Hown");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.SunbellCollar_title", "Sunbeww Cowwaw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.RockhogCandy_title", "Wockhog Candy");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.ShadyBrew_title", "Shady Bwew");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.NumskullAlly_title", "Numskuww");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.KrabAlly_title", "Kwab");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Lobba_title", "Wobba");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.IcedLemonade_title", "Iced Wemonade");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.ShinySeashell_title", "Shiny Seasheww");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.CanOFog_title", "Can O' Fog");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BomBunny_title", "Bom Bunny");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Thumper_title", "Thumpa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Bunner_title", "Bunna");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sizzle_title", "Sizzwe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Biji_title", "Biji");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Plopperfish_title", "Pwoppewfish");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Chester_title", "Chesta");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sharkgor_title", "Shawkgow");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sincor_title", "Sincow");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.InkMiniboss_title", "Scuwgeon Hook");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.NewBombom_title", "Bombom");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Sobbish_title", "Sobbish");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.DustBun_title", "Dust Bun");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Shivber_title", "Shivba");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Chipper_title", "Chippa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.JunkBossPhase2_title", "BonKowe Cowe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.JunkBoss_title", "BonKowe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.OverburnMiniboss_title", "Wishfuw Souw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.OverburnPeon_title", "Buwning Souw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.DesecratedSoul_title", "Desecwated Souw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EmberKnight_title", "Emba Knight");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.SorrowingSoul_title", "De Sowwowing Souw");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.NewVesta_title", "Vesta");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.NewZula_title", "Zuwa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilChikaiju_title", "Chikaiju");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilChikagoru_title", "Chikagowu");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilChikashi_title", "Chikashi");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilChikasan_title", "Chikasan");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilChikani_title", "Chikani");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilChikichi_title", "Chikichi");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.ShadyBrewer_title", "Shady Bwewa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Executioner_title", "Hack-n-Swash");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Crower_title", "Cwowa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.EvilMonch_title", "Monch");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.DevicroMiniboss_title", "Devicwo");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Kindle_title", "Kindwe");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Panthra_title", "Panthwa");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Hailia_title", "Haiwia");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.Ringlo_title", "Wingwo");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.BlankMaskEnemy_title", "Shade Wisp");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.LichBossPhase2_title", "Wowd Mazkwak");
            Cards.SetString("Wildfrost.Jacorb.Snowfall.LichBoss_title", "Wowd Mazkwak");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.BonKoreYoyoChallenge_title", "BonKowe Yoyo Chawwenge");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.BonKoreYoyoChallenge_text", "Finish De Kowe's Waiw wif onwy Junk in yuw hand");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.BonKoreYoyoChallenge_reward", "New Item Unwocked!");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.MazkinMaskChallenge_title", "Mazkin Mask Chawwenge");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.MazkinMaskChallenge_text", "Finish Wowd Mazkwak wifout appwying Fwost to meanies");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.MazkinMaskChallenge_reward", "New Item Unwocked!");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.FickleCaneChallenge_title", "Fickwe's Cane Chawwenge");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.FickleCaneChallenge_text", "Add 20 Wosha Hands to yuw hand");
            Challenges.SetString("Wildfrost.Jacorb.Snowfall.FickleCaneChallenge_reward", "New Item Unwocked!");
            Modifiers.SetString("Wildfrost.Jacorb.Snowfall.LuminBell_title", "Wuminice Beww");
            Modifiers.SetString("Wildfrost.Jacorb.Snowfall.LuminBell_text", "A singwe meanie wiww be upgwaded wif a <Luminice Charm> each battwe.");
            Modifiers.SetString("Wildfrost.Jacorb.Snowfall.BountyBell_title", "Bounty Beww");
            Modifiers.SetString("Wildfrost.Jacorb.Snowfall.BountyBell_text", "Add a <Bounty Hunter> to each fight afta weaving de <Tundra>");
            Modifiers.SetString("Wildfrost.Jacorb.Snowfall.ScrapyardBell_title", "Scwapyawd Beww");
            Modifiers.SetString("Wildfrost.Jacorb.Snowfall.ScrapyardBell_text", "Stawt wif <2> <Junkweed> in yuw deck.");
            UIText.SetString("Snowfall.map_upgradeEvent", "Ascension Chamba");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.BomBattle_name", "Bun Squad");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.InkBattle_name", "Smudged Saiwows");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.JunkBattle_name", "De Kowe's Waiw");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.OverburnBattle_name", "Wickewed Souws");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.CrowerBattle_name", "Cweaving Cwowews");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.LichBattle_name", "Wowd Mazkwak");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.BonKoreYoyoUnlock_unlockTitle", "New Item Invented!");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.BonKoreYoyoUnlock_unlockDesc", "Visit de Inventow's Hut to discova yuw new item!");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.MazkinMaskUnlock_unlockTitle", "New Item Invented!");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.MazkinMaskUnlock_unlockDesc", "Visit de Inventow's Hut to discova yuw new item!");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.FickleCaneUnlock_unlockTitle", "New Item Invented!");
            UIText.SetString("Wildfrost.Jacorb.Snowfall.FickleCaneUnlock_unlockDesc", "Visit de Inventow's Hut to discova yuw new item!");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.UpgradeCard_title", "Ascension Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.UpgradeCard_text", "Ascends an awwy wif <keyword=wildfrost.jacorb.snowfall.upgradeable>, but makes dem unabwe to have chawms");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.LuminCharm_title", "Wuminice Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.LuminCharm_text", "Stawt wif <1><keyword=lumin>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.TarredHeartCharm_title", "Tawwed Heawt Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.TarredHeartCharm_text", "Gain <keyword=summoned>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MoldyBreadCharm_title", "Mowdy Bwead Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MoldyBreadCharm_text", "<-1><keyword=attack>\nGain <2><keyword=wildfrost.jacorb.snowfall.limit>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HandyCharm_title", "Handy Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HandyCharm_text", "Add a Wosha Hand to yuw hand");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MirrorCharm_title", "Miwwow Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MirrorCharm_text", "When an awwy is hit by an meanie, take <1> owie");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.GamblerCharm_title", "Gambwa Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.GamblerCharm_text", "Wose <5><keyword=blings>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.BarrelCharm_title", "Bawwew Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.BarrelCharm_text", "Appwy <2><keyword=explode>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HailCharm_title", "Haiw Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HailCharm_text", "When hit, gain <1><keyword=snow>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.PillowCharm_title", "Piwwow Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.PillowCharm_text", "Stawt wif <1><keyword=haze>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HeroicCharm_title", "Hewoic Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HeroicCharm_text", "Gain <keyword=frontline>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.RomeoCharm_title", "Womeo Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.RomeoCharm_text", "When an awwy in de wow is kiwwed, sacwifice sewf");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HeavyCharm_title", "Heavy Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.HeavyCharm_text", "Takes up <2> chawm swots");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MockingCharm_title", "Mocking Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MockingCharm_text", "Count down tawget's <keyword=counter> by <1>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.BullCharm_title", "Buww Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.BullCharm_text", "Deaw additionaw <keyword=attack> equaw to <keyword=frenzy>\n<+1><keyword=counter>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.SuperstarCharm_title", "Supewstaw Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.SuperstarCharm_text", "Whiwe unowied, <keyword=frenzy> is incweased by <1>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MoltenPepperCharm_title", "Mowten Peppa Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.MoltenPepperCharm_text", "When <keyword=spice>'d, gain <1> wess but count down <keyword=counter> by <1>");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.PhoenixCharm_title", "Phoenix Chawm");
            Upgrades.SetString("Wildfrost.Jacorb.Snowfall.PhoenixCharm_text", "When an awwy is hit, gain <1><keyword=spice>");

            AddLocaleTextAssets();
            if (SceneManager.IsLoaded("MainMenu"))
                ChangeLogo(SceneManager.GetActive());
        }


        public override void Unload()
        {
            Events.OnSceneChanged -= ChangeLogo;
            Events.OnGameStart -= PatchSLS.Postfix;
            LocalizationSettings.SelectedLocale = LocalizationSettings.AvailableLocales.Locales.First(l => l.Identifier.Code == Settings.Load("Language", "en"));
            base.Unload();
        }

        internal void AddLocaleTextAssets()
        {
            Locale modLocale = LocalizationSettings.AvailableLocales.GetLocale(LocalizationUWU.locale);
            Names instance = MonoBehaviourSingleton<Names>.instance;
            Names.LocaleTextAsset Snowdwellers = new()
            {
                locale = modLocale,
                textAsset = new TextAsset(string.Join("\n", File.ReadAllLines(Mod.ModDirectory + "\\files\\Snowdwellers.txt")))
            };
            instance.assets[0].files = instance.assets[0].files.With(Snowdwellers);
            Names.LocaleTextAsset Shademancers = new()
            {
                locale = modLocale,
                textAsset = new TextAsset(string.Join("\n", File.ReadAllLines(Mod.ModDirectory + "\\files\\Shademancers.txt")))
            };
            instance.assets[2].files = instance.assets[2].files.With(Shademancers);
            Names.LocaleTextAsset Clunkmasters = new()
            {
                locale = modLocale,
                textAsset = new TextAsset(string.Join("\n", File.ReadAllLines(Mod.ModDirectory + "\\files\\Clunkmasters.txt")))
            };
            instance.assets[3].files = instance.assets[3].files.With(Clunkmasters);
        }

        [HarmonyPatch(typeof(FontSetterSystem), "LocaleChanged")]
        internal class PatchFSS
        {
            [HarmonyPostfix]
            private static void Postfix(Locale locale)
            {
                Locale locale1 = LocalizationHelper.TryAddLocale(LocalizationUWU.locale);
                if (!(locale.LocaleName == locale1.LocaleName))
                    return;
                bool useCustomFont = false;
                if (useCustomFont)
                {
                    FontSetterSystem.current = TMP_FontAsset.CreateFontAsset(new Font(Path.Combine(Mod.ModDirectory, "Ely Rounded Bold.ttf")));
                    FontSetterSystem.UpdateFontSetters();

                }
            }
        }
        [HarmonyPatch(typeof(LocalizedString), nameof(LocalizedString.GetLocalizedString), new Type[] { })]
        internal class PatchLS
        {
            [HarmonyPostfix]
            private static void Postfix(LocalizedString __instance, ref string __result)
            {
                if (LocalizationSettings.SelectedLocale.Identifier == new LocaleIdentifier(SystemLanguage.English)
                    || __instance.LocaleOverride == LocalizationSettings.AvailableLocales.GetLocale(new LocaleIdentifier(SystemLanguage.English)))
                    return;
                if (!__result.IsNullOrEmpty()) 
                    return;
                __instance.LocaleOverride = LocalizationSettings.AvailableLocales.GetLocale(new LocaleIdentifier(SystemLanguage.English));
                __result = __instance.GetLocalizedString();
            }
        }

        //[HarmonyPatch(typeof(SettingsLocaleSelector), "GetStartupLocale")]
        internal class PatchSLS
        {
            internal static void Postfix()
            {
                Locale locale = LocalizationHelper.TryAddLocale(LocalizationUWU.locale);
                if (LocalizationSettings.SelectedLocale != null && Settings.Load("Language", "") == locale.Identifier)
                    LocalizationSettings.SelectedLocale = locale;
            }
        }
    }
}